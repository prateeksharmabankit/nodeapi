import { SharedKeyCredential } from "./credentials/SharedKeyCredential";
import { IPRange } from "./IPRange";
import { SASProtocol } from "./SASQueryParameters";
import { SASQueryParameters } from "./SASQueryParameters";
/**
 * ONLY AVAILABLE IN NODE.JS RUNTIME.
 *
 * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.
 *
 * @export
 * @class BlobSASSignatureValues
 */
export interface BlobSASSignatureValues {
    /**
     * The version of the service this SAS will target. If not specified, it will default to the version targeted by the
     * library.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    version?: string;
    /**
     * Optional. SAS protocols, HTTPS only or HTTPSandHTTP
     *
     * @type {SASProtocol}
     * @memberof BlobSASSignatureValues
     */
    protocol?: SASProtocol;
    /**
     * Optional. When the SAS will take effect.
     *
     * @type {Date}
     * @memberof BlobSASSignatureValues
     */
    startTime?: Date;
    /**
     * Optional only when identifier is provided. The time after which the SAS will no longer work.
     *
     * @type {Date}
     * @memberof BlobSASSignatureValues
     */
    expiryTime?: Date;
    /**
     * Optional only when identifier is provided.
     * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource
     * being accessed for help constructing the permissions string.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    permissions?: string;
    /**
     * Optional. IP ranges allowed in this SAS.
     *
     * @type {IPRange}
     * @memberof BlobSASSignatureValues
     */
    ipRange?: IPRange;
    /**
     * The name of the container the SAS user may access.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    containerName: string;
    /**
     * Optional. The name of the container the SAS user may access.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    blobName?: string;
    /**
     * Optional. The name of the access policy on the container this SAS references if any.
     *
     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    identifier?: string;
    /**
     * Optional. The cache-control header for the SAS.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    cacheControl?: string;
    /**
     * Optional. The content-disposition header for the SAS.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    contentDisposition?: string;
    /**
     * Optional. The content-encoding header for the SAS.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    contentEncoding?: string;
    /**
     * Optional. The content-language header for the SAS.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    contentLanguage?: string;
    /**
     * Optional. The content-type header for the SAS.
     *
     * @type {string}
     * @memberof BlobSASSignatureValues
     */
    contentType?: string;
}
/**
 * ONLY AVAILABLE IN NODE.JS RUNTIME.
 *
 * Creates an instance of SASQueryParameters.
 *
 * Only accepts required settings needed to create a SAS. For optional settings please
 * set corresponding properties directly, such as permissions, startTime and identifier.
 *
 * WARNING: When identifier is not provided, permissions and expiryTime are required.
 * You MUST assign value to identifier or expiryTime & permissions manually if you initial with
 * this constructor.
 *
 * @export
 * @param {BlobSASSignatureValues} blobSASSignatureValues
 * @param {SharedKeyCredential} sharedKeyCredential
 * @returns {SASQueryParameters}
 */
export declare function generateBlobSASQueryParameters(blobSASSignatureValues: BlobSASSignatureValues, sharedKeyCredential: SharedKeyCredential): SASQueryParameters;
//# sourceMappingURL=BlobSASSignatureValues.d.ts.map