{"version":3,"file":"index.js","sources":["../src/generated/lib/models/index.ts","../src/Aborter.ts","../src/generated/lib/models/mappers.ts","../src/generated/lib/models/serviceMappers.ts","../src/generated/lib/models/parameters.ts","../src/generated/lib/operations/service.ts","../src/generated/lib/models/containerMappers.ts","../src/generated/lib/operations/container.ts","../src/generated/lib/models/blobMappers.ts","../src/generated/lib/operations/blob.ts","../src/generated/lib/models/pageBlobMappers.ts","../src/generated/lib/operations/pageBlob.ts","../src/generated/lib/models/appendBlobMappers.ts","../src/generated/lib/operations/appendBlob.ts","../src/generated/lib/models/blockBlobMappers.ts","../src/generated/lib/operations/blockBlob.ts","../src/generated/lib/operations/index.ts","../src/utils/constants.ts","../src/utils/utils.common.ts","../src/policies/BrowserPolicy.ts","../src/BrowserPolicyFactory.ts","../src/policies/LoggingPolicy.ts","../src/LoggingPolicyFactory.ts","../src/policies/RetryPolicy.ts","../src/RetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/policies/UniqueRequestIDPolicy.ts","../src/UniqueRequestIDPolicyFactory.ts","../src/Pipeline.ts","../src/generated/lib/storageClientContext.ts","../src/StorageClient.ts","../src/utils/RetriableReadableStream.ts","../src/BlobDownloadResponse.ts","../src/Range.ts","../src/credentials/Credential.ts","../src/policies/CredentialPolicy.ts","../src/policies/SharedKeyCredentialPolicy.ts","../src/credentials/SharedKeyCredential.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/AnonymousCredential.ts","../src/utils/Batch.ts","../src/utils/utils.node.ts","../src/generated/lib/storageClient.ts","../src/LeaseClient.ts","../src/BlobClient.ts","../src/AppendBlobClient.ts","../src/utils/BufferScheduler.ts","../src/BlockBlobClient.ts","../src/PageBlobClient.ts","../src/internal.ts","../src/ContainerClient.ts","../src/BlobServiceClient.ts","../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/IPRange.ts","../src/SASQueryParameters.ts","../src/AccountSASSignatureValues.ts","../src/BlobSASPermissions.ts","../src/ContainerSASPermissions.ts","../src/BlobSASSignatureValues.ts","../src/credentials/RawTokenCredential.ts","../src/index.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as coreHttp from \"@azure/core-http\";\n\n/**\n * An interface representing StorageError.\n */\nexport interface StorageError {\n  message?: string;\n}\n\n/**\n * An Access policy\n */\nexport interface AccessPolicy {\n  /**\n   * the date-time the policy is active\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  start: string;\n  /**\n   * the date-time the policy expires\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  expiry: string;\n  /**\n   * the permissions for the acl policy\n   */\n  permission: string;\n}\n\n/**\n * Properties of a blob\n */\nexport interface BlobProperties {\n  creationTime?: Date;\n  lastModified: Date;\n  etag: string;\n  /**\n   * Size in bytes\n   */\n  contentLength?: number;\n  contentType?: string;\n  contentEncoding?: string;\n  contentLanguage?: string;\n  contentMD5?: Uint8Array;\n  contentDisposition?: string;\n  cacheControl?: string;\n  blobSequenceNumber?: number;\n  /**\n   * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * Possible values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  copyId?: string;\n  /**\n   * Possible values include: 'pending', 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  copySource?: string;\n  copyProgress?: string;\n  copyCompletionTime?: Date;\n  copyStatusDescription?: string;\n  serverEncrypted?: boolean;\n  incrementalCopy?: boolean;\n  destinationSnapshot?: string;\n  deletedTime?: Date;\n  remainingRetentionDays?: number;\n  /**\n   * Possible values include: 'P4', 'P6', 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool',\n   * 'Archive'\n   */\n  accessTier?: AccessTier;\n  accessTierInferred?: boolean;\n  /**\n   * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'\n   */\n  archiveStatus?: ArchiveStatus;\n  accessTierChangeTime?: Date;\n}\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix: string;\n  marker: string;\n  maxResults: number;\n  delimiter: string;\n  segment: BlobFlatListSegment;\n  nextMarker: string;\n}\n\n/**\n * An interface representing BlobPrefix.\n */\nexport interface BlobPrefix {\n  name: string;\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix: string;\n  marker: string;\n  maxResults: number;\n  delimiter: string;\n  segment: BlobHierarchyListSegment;\n  nextMarker: string;\n}\n\n/**\n * Represents a single block in a block blob.  It describes the block's ID and size.\n */\nexport interface Block {\n  /**\n   * The base64 encoded block ID.\n   */\n  name: string;\n  /**\n   * The block size in bytes.\n   */\n  size: number;\n}\n\n/**\n * An interface representing BlockList.\n */\nexport interface BlockList {\n  committedBlocks?: Block[];\n  uncommittedBlocks?: Block[];\n}\n\n/**\n * An interface representing BlockLookupList.\n */\nexport interface BlockLookupList {\n  committed?: string[];\n  uncommitted?: string[];\n  latest?: string[];\n}\n\n/**\n * Properties of a container\n */\nexport interface ContainerProperties {\n  lastModified: Date;\n  etag: string;\n  /**\n   * Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * Possible values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Possible values include: 'container', 'blob'\n   */\n  publicAccess?: PublicAccessType;\n  hasImmutabilityPolicy?: boolean;\n  hasLegalHold?: boolean;\n}\n\n/**\n * An Azure Storage container\n */\nexport interface ContainerItem {\n  name: string;\n  properties: ContainerProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An enumeration of containers\n */\nexport interface ListContainersSegmentResponse {\n  serviceEndpoint: string;\n  prefix: string;\n  marker?: string;\n  maxResults: number;\n  containerItems: ContainerItem[];\n  nextMarker: string;\n}\n\n/**\n * CORS is an HTTP feature that enables a web application running under one domain to access\n * resources in another domain. Web browsers implement a security restriction known as same-origin\n * policy that prevents a web page from calling APIs in a different domain; CORS provides a secure\n * way to allow one domain (the origin domain) to call APIs in another domain\n */\nexport interface CorsRule {\n  /**\n   * The origin domains that are permitted to make a request against the storage service via CORS.\n   * The origin domain is the domain from which the request originates. Note that the origin must\n   * be an exact case-sensitive match with the origin that the user age sends to the service. You\n   * can also use the wildcard character '*' to allow all origin domains to make requests via CORS.\n   */\n  allowedOrigins: string;\n  /**\n   * The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma\n   * separated)\n   */\n  allowedMethods: string;\n  /**\n   * the request headers that the origin domain may specify on the CORS request.\n   */\n  allowedHeaders: string;\n  /**\n   * The response headers that may be sent in the response to the CORS request and exposed by the\n   * browser to the request issuer\n   */\n  exposedHeaders: string;\n  /**\n   * The maximum amount time that a browser should cache the preflight OPTIONS request.\n   */\n  maxAgeInSeconds: number;\n}\n\n/**\n * Geo-Replication information for the Secondary Storage Service\n */\nexport interface GeoReplication {\n  /**\n   * The status of the secondary location. Possible values include: 'live', 'bootstrap',\n   * 'unavailable'\n   */\n  status: GeoReplicationStatusType;\n  /**\n   * A GMT date/time value, to the second. All primary writes preceding this value are guaranteed\n   * to be available for read operations at the secondary. Primary writes after this point in time\n   * may or may not be available for reads.\n   */\n  lastSyncTime: Date;\n}\n\n/**\n * the retention policy which determines how long the associated data should persist\n */\nexport interface RetentionPolicy {\n  /**\n   * Indicates whether a retention policy is enabled for the storage service\n   */\n  enabled: boolean;\n  /**\n   * Indicates the number of days that metrics or logging or soft-deleted data should be retained.\n   * All data older than this value will be deleted\n   */\n  days?: number;\n}\n\n/**\n * Azure Analytics Logging settings.\n */\nexport interface Logging {\n  /**\n   * The version of Storage Analytics to configure.\n   */\n  version: string;\n  /**\n   * Indicates whether all delete requests should be logged.\n   */\n  deleteProperty: boolean;\n  /**\n   * Indicates whether all read requests should be logged.\n   */\n  read: boolean;\n  /**\n   * Indicates whether all write requests should be logged.\n   */\n  write: boolean;\n  retentionPolicy: RetentionPolicy;\n}\n\n/**\n * a summary of request statistics grouped by API in hour or minute aggregates for blobs\n */\nexport interface Metrics {\n  /**\n   * The version of Storage Analytics to configure.\n   */\n  version?: string;\n  /**\n   * Indicates whether metrics are enabled for the Blob service.\n   */\n  enabled: boolean;\n  /**\n   * Indicates whether metrics should generate summary statistics for called API operations.\n   */\n  includeAPIs?: boolean;\n  retentionPolicy?: RetentionPolicy;\n}\n\n/**\n * An interface representing PageRange.\n */\nexport interface PageRange {\n  start: number;\n  end: number;\n}\n\n/**\n * An interface representing ClearRange.\n */\nexport interface ClearRange {\n  start: number;\n  end: number;\n}\n\n/**\n * the list of pages\n */\nexport interface PageList {\n  pageRange?: PageRange[];\n  clearRange?: ClearRange[];\n}\n\n/**\n * signed identifier\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  accessPolicy: AccessPolicy;\n}\n\n/**\n * The properties that enable an account to host a static website\n */\nexport interface StaticWebsite {\n  /**\n   * Indicates whether this account is hosting a static website\n   */\n  enabled: boolean;\n  /**\n   * The default name of the index page under each directory\n   */\n  indexDocument?: string;\n  /**\n   * The absolute path of the custom 404 page\n   */\n  errorDocument404Path?: string;\n}\n\n/**\n * Storage Service Properties.\n */\nexport interface StorageServiceProperties {\n  logging?: Logging;\n  hourMetrics?: Metrics;\n  minuteMetrics?: Metrics;\n  /**\n   * The set of CORS rules.\n   */\n  cors?: CorsRule[];\n  /**\n   * The default version to use for requests to the Blob service if an incoming request's version\n   * is not specified. Possible values include version 2008-10-27 and all more recent versions\n   */\n  defaultServiceVersion?: string;\n  deleteRetentionPolicy?: RetentionPolicy;\n  staticWebsite?: StaticWebsite;\n}\n\n/**\n * Stats for the storage service.\n */\nexport interface StorageServiceStats {\n  geoReplication?: GeoReplication;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface LeaseAccessConditions {\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this\n   * ID.\n   */\n  leaseId?: string;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface ModifiedAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface BlobHTTPHeaders {\n  /**\n   * Optional. Sets the blob's cache control. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobCacheControl?: string;\n  /**\n   * Optional. Sets the blob's content type. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobContentType?: string;\n  /**\n   * Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes\n   * for the individual blocks were validated when each was uploaded.\n   */\n  blobContentMD5?: Uint8Array;\n  /**\n   * Optional. Sets the blob's content encoding. If specified, this property is stored with the\n   * blob and returned with a read request.\n   */\n  blobContentEncoding?: string;\n  /**\n   * Optional. Set the blob's content language. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobContentLanguage?: string;\n  /**\n   * Optional. Sets the blob's Content-Disposition header.\n   */\n  blobContentDisposition?: string;\n}\n\n/**\n * Additional parameters for startCopyFromURL operation.\n */\nexport interface SourceModifiedAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  sourceIfModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  sourceIfUnmodifiedSince?: Date;\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  sourceIfMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  sourceIfNoneMatch?: string;\n}\n\n/**\n * Additional parameters for a set of operations, such as: PageBlob_uploadPages,\n * PageBlob_clearPages.\n */\nexport interface SequenceNumberAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has a sequence number less than or\n   * equal to the specified.\n   */\n  ifSequenceNumberLessThanOrEqualTo?: number;\n  /**\n   * Specify this header value to operate only on a blob if it has a sequence number less than the\n   * specified.\n   */\n  ifSequenceNumberLessThan?: number;\n  /**\n   * Specify this header value to operate only on a blob if it has the specified sequence number.\n   */\n  ifSequenceNumberEqualTo?: number;\n}\n\n/**\n * Additional parameters for appendBlock operation.\n */\nexport interface AppendPositionAccessConditions {\n  /**\n   * Optional conditional header. The max length in bytes permitted for the append blob. If the\n   * Append Block operation would cause the blob to exceed that limit or if the blob size is\n   * already greater than the value specified in this header, the request will fail with\n   * MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).\n   */\n  maxSize?: number;\n  /**\n   * Optional conditional header, used only for the Append Block operation. A number indicating the\n   * byte offset to compare. Append Block will succeed only if the append position is equal to this\n   * number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP\n   * status code 412 - Precondition Failed).\n   */\n  appendPosition?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceSetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceGetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceGetStatisticsOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceListContainersSegmentOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify that the container's metadata be returned as part of the\n   * response body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceListContainersSegmentNextOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerCreateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  access?: PublicAccessType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerGetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerDeleteMethodOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerSetMetadataOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerGetAccessPolicyOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerSetAccessPolicyOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * the acls for the container\n   */\n  containerAcl?: SignedIdentifier[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  access?: PublicAccessType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerAcquireLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never\n   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be\n   * changed using renew or change.\n   */\n  duration?: number;\n  /**\n   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if\n   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list\n   * of valid GUID string formats.\n   */\n  proposedLeaseId?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerReleaseLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerRenewLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerBreakLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * For a break operation, proposed duration the lease should continue before it is broken, in\n   * seconds, between 0 and 60. This break period is only used if it is shorter than the time\n   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will\n   * not be available before the break period has expired, but the lease may be held for longer\n   * than the break period. If this header does not appear with a break operation, a fixed-duration\n   * lease breaks after the remaining lease period elapses, and an infinite lease breaks\n   * immediately.\n   */\n  breakPeriod?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerChangeLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobFlatSegmentOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobHierarchySegmentOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobFlatSegmentNextOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobHierarchySegmentNextOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobDownloadOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * When set to true and specified together with the Range, the service returns the MD5 hash for\n   * the range, as long as the range is less than or equal to 4 MB in size.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobGetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobDeleteMethodOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Required if the blob has associated snapshots. Specify one of the following two options:\n   * include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots\n   * and not the blob itself. Possible values include: 'include', 'only'\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobUndeleteOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetHTTPHeadersOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetMetadataOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobAcquireLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never\n   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be\n   * changed using renew or change.\n   */\n  duration?: number;\n  /**\n   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if\n   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list\n   * of valid GUID string formats.\n   */\n  proposedLeaseId?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobReleaseLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobRenewLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobChangeLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobBreakLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * For a break operation, proposed duration the lease should continue before it is broken, in\n   * seconds, between 0 and 60. This break period is only used if it is shorter than the time\n   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will\n   * not be available before the break period has expired, but the lease may be held for longer\n   * than the break period. If this header does not appear with a break operation, a fixed-duration\n   * lease breaks after the remaining lease period elapses, and an infinite lease breaks\n   * immediately.\n   */\n  breakPeriod?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobCreateSnapshotOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobStartCopyFromURLOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobAbortCopyFromURLOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetTierOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobCreateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Set for page blobs only. The sequence number is a user-controlled value that you can use to\n   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default\n   * value: 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobUploadPagesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobClearPagesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobGetPageRangesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobGetPageRangesDiffOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that\n   * specifies that the response will contain only pages that were changed between target blob and\n   * previous snapshot. Changed pages include both updated and cleared pages. The target blob may\n   * be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note\n   * that incremental snapshots are currently supported only for blobs created on or after January\n   * 1, 2016.\n   */\n  prevsnapshot?: string;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobResizeOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobUpdateSequenceNumberOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Set for page blobs only. The sequence number is a user-controlled value that you can use to\n   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default\n   * value: 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobCopyIncrementalOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface AppendBlobCreateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface AppendBlobAppendBlockOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobUploadOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobStageBlockOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobStageBlockFromURLOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Bytes of source data in the specified range.\n   */\n  sourceRange?: string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobCommitBlockListOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobGetBlockListOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Defines headers for SetProperties operation.\n */\nexport interface ServiceSetPropertiesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface ServiceGetPropertiesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetStatistics operation.\n */\nexport interface ServiceGetStatisticsHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListContainersSegment operation.\n */\nexport interface ServiceListContainersSegmentHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface ServiceGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface ContainerCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface ContainerGetPropertiesHeaders {\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Indicated whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  blobPublicAccess?: PublicAccessType;\n  /**\n   * Indicates whether the container has an immutability policy set on it.\n   */\n  hasImmutabilityPolicy?: boolean;\n  /**\n   * Indicates whether the container has a legal hold.\n   */\n  hasLegalHold?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface ContainerDeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetMetadata operation.\n */\nexport interface ContainerSetMetadataHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccessPolicy operation.\n */\nexport interface ContainerGetAccessPolicyHeaders {\n  /**\n   * Indicated whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  blobPublicAccess?: PublicAccessType;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetAccessPolicy operation.\n */\nexport interface ContainerSetAccessPolicyHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AcquireLease operation.\n */\nexport interface ContainerAcquireLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ReleaseLease operation.\n */\nexport interface ContainerReleaseLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for RenewLease operation.\n */\nexport interface ContainerRenewLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for BreakLease operation.\n */\nexport interface ContainerBreakLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ChangeLease operation.\n */\nexport interface ContainerChangeLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListBlobFlatSegment operation.\n */\nexport interface ContainerListBlobFlatSegmentHeaders {\n  /**\n   * The media type of the body of the response. For List Blobs this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListBlobHierarchySegment operation.\n */\nexport interface ContainerListBlobHierarchySegmentHeaders {\n  /**\n   * The media type of the body of the response. For List Blobs this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface ContainerGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Download operation.\n */\nexport interface BlobDownloadHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The number of bytes present in the response body.\n   */\n  contentLength?: number;\n  /**\n   * The media type of the body of the response. For Download Blob this is\n   * 'application/octet-stream'\n   */\n  contentType?: string;\n  /**\n   * Indicates the range of bytes returned in the event that the client requested a subset of the\n   * blob by setting the 'Range' request header.\n   */\n  contentRange?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header returns the value that was specified for the Content-Encoding request header\n   */\n  contentEncoding?: string;\n  /**\n   * This header is returned if it was previously specified for the blob.\n   */\n  cacheControl?: string;\n  /**\n   * This header returns the value that was specified for the 'x-ms-blob-content-disposition'\n   * header. The Content-Disposition response header field conveys additional information about how\n   * to process the response payload, and also can be used to attach additional metadata. For\n   * example, if set to attachment, it indicates that the user-agent should not display the\n   * response, but instead show a Save As dialog with a filename other than the blob name\n   * specified.\n   */\n  contentDisposition?: string;\n  /**\n   * This header returns the value that was specified for the Content-Language request header.\n   */\n  contentLanguage?: string;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination\n   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This\n   * header does not appear if a copy is pending, if this blob has never been the destination in a\n   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation\n   * using Set Blob Properties, Put Blob, or Put Block List.\n   */\n  copyCompletionTime?: Date;\n  /**\n   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal\n   * or non-fatal copy operation failure. This header does not appear if this blob has never been\n   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded\n   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyStatusDescription?: string;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * Contains the number of bytes copied and the total bytes in the source in the last attempted\n   * Copy Blob operation where this blob was the destination blob. Can show between 0 and\n   * Content-Length bytes copied. This header does not appear if this blob has never been the\n   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy\n   * Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyProgress?: string;\n  /**\n   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted\n   * Copy Blob operation where this blob was the destination blob. This header does not appear if\n   * this blob has never been the destination in a Copy Blob operation, or if this blob has been\n   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put\n   * Block List.\n   */\n  copySource?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * Indicates that the service supports requests for partial blob content.\n   */\n  acceptRanges?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  /**\n   * The value of this header is set to true if the blob data and application metadata are\n   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when\n   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).\n   */\n  isServerEncrypted?: boolean;\n  /**\n   * If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this\n   * response header is returned with the value of the whole blob's MD5 value. This value may or\n   * may not be equal to the value returned in Content-MD5 header, with the latter calculated from\n   * the requested range\n   */\n  blobContentMD5?: Uint8Array;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface BlobGetPropertiesHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Returns the date and time the blob was created.\n   */\n  creationTime?: Date;\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination\n   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This\n   * header does not appear if a copy is pending, if this blob has never been the destination in a\n   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation\n   * using Set Blob Properties, Put Blob, or Put Block List.\n   */\n  copyCompletionTime?: Date;\n  /**\n   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal\n   * or non-fatal copy operation failure. This header does not appear if this blob has never been\n   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded\n   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyStatusDescription?: string;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * Contains the number of bytes copied and the total bytes in the source in the last attempted\n   * Copy Blob operation where this blob was the destination blob. Can show between 0 and\n   * Content-Length bytes copied. This header does not appear if this blob has never been the\n   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy\n   * Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyProgress?: string;\n  /**\n   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted\n   * Copy Blob operation where this blob was the destination blob. This header does not appear if\n   * this blob has never been the destination in a Copy Blob operation, or if this blob has been\n   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put\n   * Block List.\n   */\n  copySource?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  /**\n   * Included if the blob is incremental copy blob.\n   */\n  isIncrementalCopy?: boolean;\n  /**\n   * Included if the blob is incremental copy blob or incremental copy snapshot, if\n   * x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot\n   * for this blob.\n   */\n  destinationSnapshot?: string;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * The number of bytes present in the response body.\n   */\n  contentLength?: number;\n  /**\n   * The content type specified for the blob. The default content type is\n   * 'application/octet-stream'\n   */\n  contentType?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header returns the value that was specified for the Content-Encoding request header\n   */\n  contentEncoding?: string;\n  /**\n   * This header returns the value that was specified for the 'x-ms-blob-content-disposition'\n   * header. The Content-Disposition response header field conveys additional information about how\n   * to process the response payload, and also can be used to attach additional metadata. For\n   * example, if set to attachment, it indicates that the user-agent should not display the\n   * response, but instead show a Save As dialog with a filename other than the blob name\n   * specified.\n   */\n  contentDisposition?: string;\n  /**\n   * This header returns the value that was specified for the Content-Language request header.\n   */\n  contentLanguage?: string;\n  /**\n   * This header is returned if it was previously specified for the blob.\n   */\n  cacheControl?: string;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Indicates that the service supports requests for partial blob content.\n   */\n  acceptRanges?: string;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  /**\n   * The value of this header is set to true if the blob data and application metadata are\n   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when\n   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).\n   */\n  isServerEncrypted?: boolean;\n  /**\n   * The tier of page blob on a premium storage account or tier of block blob on blob storage LRS\n   * accounts. For a list of allowed premium page blob tiers, see\n   * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For\n   * blob storage LRS accounts, valid values are Hot/Cool/Archive.\n   */\n  accessTier?: string;\n  /**\n   * For page blobs on a premium storage account only. If the access tier is not explicitly set on\n   * the blob, the tier is inferred based on its content length and this header will be returned\n   * with true value.\n   */\n  accessTierInferred?: boolean;\n  /**\n   * For blob storage LRS accounts, valid values are\n   * rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not\n   * complete then this header is returned indicating that rehydrate is pending and also tells the\n   * destination tier.\n   */\n  archiveStatus?: string;\n  /**\n   * The time the tier was changed on the object. This is only returned if the tier on the block\n   * blob was ever set.\n   */\n  accessTierChangeTime?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface BlobDeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface PageBlobCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface AppendBlobCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Upload operation.\n */\nexport interface BlockBlobUploadHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Undelete operation.\n */\nexport interface BlobUndeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated.\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetHTTPHeaders operation.\n */\nexport interface BlobSetHTTPHeadersHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetMetadata operation.\n */\nexport interface BlobSetMetadataHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AcquireLease operation.\n */\nexport interface BlobAcquireLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ReleaseLease operation.\n */\nexport interface BlobReleaseLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for RenewLease operation.\n */\nexport interface BlobRenewLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ChangeLease operation.\n */\nexport interface BlobChangeLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for BreakLease operation.\n */\nexport interface BlobBreakLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CreateSnapshot operation.\n */\nexport interface BlobCreateSnapshotHeaders {\n  /**\n   * Uniquely identifies the snapshot and indicates the snapshot version. It may be used in\n   * subsequent requests to access the snapshot\n   */\n  snapshot?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StartCopyFromURL operation.\n */\nexport interface BlobStartCopyFromURLHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AbortCopyFromURL operation.\n */\nexport interface BlobAbortCopyFromURLHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetTier operation.\n */\nexport interface BlobSetTierHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and newer.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface BlobGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StageBlock operation.\n */\nexport interface BlockBlobStageBlockHeaders {\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StageBlockFromURL operation.\n */\nexport interface BlockBlobStageBlockFromURLHeaders {\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CommitBlockList operation.\n */\nexport interface BlockBlobCommitBlockListHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetBlockList operation.\n */\nexport interface BlockBlobGetBlockListHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The media type of the body of the response. For Get Block List this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for UploadPages operation.\n */\nexport interface PageBlobUploadPagesHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * The current sequence number for the page blob.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ClearPages operation.\n */\nexport interface PageBlobClearPagesHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * The current sequence number for the page blob.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetPageRanges operation.\n */\nexport interface PageBlobGetPageRangesHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetPageRangesDiff operation.\n */\nexport interface PageBlobGetPageRangesDiffHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Resize operation.\n */\nexport interface PageBlobResizeHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for UpdateSequenceNumber operation.\n */\nexport interface PageBlobUpdateSequenceNumberHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CopyIncremental operation.\n */\nexport interface PageBlobCopyIncrementalHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AppendBlock operation.\n */\nexport interface AppendBlobAppendBlockHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * This response header is returned only for append operations. It returns the offset at which\n   * the block was committed, in bytes.\n   */\n  blobAppendOffset?: string;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  errorCode?: string;\n}\n\n/**\n * Defines values for PublicAccessType.\n * Possible values include: 'container', 'blob'\n * @readonly\n * @enum {string}\n */\nexport type PublicAccessType = 'container' | 'blob';\n\n/**\n * Defines values for CopyStatusType.\n * Possible values include: 'pending', 'success', 'aborted', 'failed'\n * @readonly\n * @enum {string}\n */\nexport type CopyStatusType = 'pending' | 'success' | 'aborted' | 'failed';\n\n/**\n * Defines values for LeaseDurationType.\n * Possible values include: 'infinite', 'fixed'\n * @readonly\n * @enum {string}\n */\nexport type LeaseDurationType = 'infinite' | 'fixed';\n\n/**\n * Defines values for LeaseStateType.\n * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n * @readonly\n * @enum {string}\n */\nexport type LeaseStateType = 'available' | 'leased' | 'expired' | 'breaking' | 'broken';\n\n/**\n * Defines values for LeaseStatusType.\n * Possible values include: 'locked', 'unlocked'\n * @readonly\n * @enum {string}\n */\nexport type LeaseStatusType = 'locked' | 'unlocked';\n\n/**\n * Defines values for AccessTier.\n * Possible values include: 'P4', 'P6', 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n * @readonly\n * @enum {string}\n */\nexport type AccessTier = 'P4' | 'P6' | 'P10' | 'P20' | 'P30' | 'P40' | 'P50' | 'Hot' | 'Cool' | 'Archive';\n\n/**\n * Defines values for ArchiveStatus.\n * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'\n * @readonly\n * @enum {string}\n */\nexport type ArchiveStatus = 'rehydrate-pending-to-hot' | 'rehydrate-pending-to-cool';\n\n/**\n * Defines values for BlobType.\n * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n * @readonly\n * @enum {string}\n */\nexport type BlobType = 'BlockBlob' | 'PageBlob' | 'AppendBlob';\n\n/**\n * Defines values for StorageErrorCode.\n * Possible values include: 'AccountAlreadyExists', 'AccountBeingCreated', 'AccountIsDisabled',\n * 'AuthenticationFailed', 'AuthorizationFailure', 'ConditionHeadersNotSupported',\n * 'ConditionNotMet', 'EmptyMetadataKey', 'InsufficientAccountPermissions', 'InternalError',\n * 'InvalidAuthenticationInfo', 'InvalidHeaderValue', 'InvalidHttpVerb', 'InvalidInput',\n * 'InvalidMd5', 'InvalidMetadata', 'InvalidQueryParameterValue', 'InvalidRange',\n * 'InvalidResourceName', 'InvalidUri', 'InvalidXmlDocument', 'InvalidXmlNodeValue', 'Md5Mismatch',\n * 'MetadataTooLarge', 'MissingContentLengthHeader', 'MissingRequiredQueryParameter',\n * 'MissingRequiredHeader', 'MissingRequiredXmlNode', 'MultipleConditionHeadersNotSupported',\n * 'OperationTimedOut', 'OutOfRangeInput', 'OutOfRangeQueryParameterValue', 'RequestBodyTooLarge',\n * 'ResourceTypeMismatch', 'RequestUrlFailedToParse', 'ResourceAlreadyExists', 'ResourceNotFound',\n * 'ServerBusy', 'UnsupportedHeader', 'UnsupportedXmlNode', 'UnsupportedQueryParameter',\n * 'UnsupportedHttpVerb', 'AppendPositionConditionNotMet', 'BlobAlreadyExists', 'BlobNotFound',\n * 'BlobOverwritten', 'BlobTierInadequateForContentLength', 'BlockCountExceedsLimit',\n * 'BlockListTooLong', 'CannotChangeToLowerTier', 'CannotVerifyCopySource',\n * 'ContainerAlreadyExists', 'ContainerBeingDeleted', 'ContainerDisabled', 'ContainerNotFound',\n * 'ContentLengthLargerThanTierLimit', 'CopyAcrossAccountsNotSupported', 'CopyIdMismatch',\n * 'FeatureVersionMismatch', 'IncrementalCopyBlobMismatch',\n * 'IncrementalCopyOfEralierVersionSnapshotNotAllowed', 'IncrementalCopySourceMustBeSnapshot',\n * 'InfiniteLeaseDurationRequired', 'InvalidBlobOrBlock', 'InvalidBlobTier', 'InvalidBlobType',\n * 'InvalidBlockId', 'InvalidBlockList', 'InvalidOperation', 'InvalidPageRange',\n * 'InvalidSourceBlobType', 'InvalidSourceBlobUrl', 'InvalidVersionForPageBlobOperation',\n * 'LeaseAlreadyPresent', 'LeaseAlreadyBroken', 'LeaseIdMismatchWithBlobOperation',\n * 'LeaseIdMismatchWithContainerOperation', 'LeaseIdMismatchWithLeaseOperation', 'LeaseIdMissing',\n * 'LeaseIsBreakingAndCannotBeAcquired', 'LeaseIsBreakingAndCannotBeChanged',\n * 'LeaseIsBrokenAndCannotBeRenewed', 'LeaseLost', 'LeaseNotPresentWithBlobOperation',\n * 'LeaseNotPresentWithContainerOperation', 'LeaseNotPresentWithLeaseOperation',\n * 'MaxBlobSizeConditionNotMet', 'NoPendingCopyOperation',\n * 'OperationNotAllowedOnIncrementalCopyBlob', 'PendingCopyOperation',\n * 'PreviousSnapshotCannotBeNewer', 'PreviousSnapshotNotFound',\n * 'PreviousSnapshotOperationNotSupported', 'SequenceNumberConditionNotMet',\n * 'SequenceNumberIncrementTooLarge', 'SnapshotCountExceeded', 'SnaphotOperationRateExceeded',\n * 'SnapshotsPresent', 'SourceConditionNotMet', 'SystemInUse', 'TargetConditionNotMet',\n * 'UnauthorizedBlobOverwrite', 'BlobBeingRehydrated', 'BlobArchived', 'BlobNotArchived'\n * @readonly\n * @enum {string}\n */\nexport type StorageErrorCode = 'AccountAlreadyExists' | 'AccountBeingCreated' | 'AccountIsDisabled' | 'AuthenticationFailed' | 'AuthorizationFailure' | 'ConditionHeadersNotSupported' | 'ConditionNotMet' | 'EmptyMetadataKey' | 'InsufficientAccountPermissions' | 'InternalError' | 'InvalidAuthenticationInfo' | 'InvalidHeaderValue' | 'InvalidHttpVerb' | 'InvalidInput' | 'InvalidMd5' | 'InvalidMetadata' | 'InvalidQueryParameterValue' | 'InvalidRange' | 'InvalidResourceName' | 'InvalidUri' | 'InvalidXmlDocument' | 'InvalidXmlNodeValue' | 'Md5Mismatch' | 'MetadataTooLarge' | 'MissingContentLengthHeader' | 'MissingRequiredQueryParameter' | 'MissingRequiredHeader' | 'MissingRequiredXmlNode' | 'MultipleConditionHeadersNotSupported' | 'OperationTimedOut' | 'OutOfRangeInput' | 'OutOfRangeQueryParameterValue' | 'RequestBodyTooLarge' | 'ResourceTypeMismatch' | 'RequestUrlFailedToParse' | 'ResourceAlreadyExists' | 'ResourceNotFound' | 'ServerBusy' | 'UnsupportedHeader' | 'UnsupportedXmlNode' | 'UnsupportedQueryParameter' | 'UnsupportedHttpVerb' | 'AppendPositionConditionNotMet' | 'BlobAlreadyExists' | 'BlobNotFound' | 'BlobOverwritten' | 'BlobTierInadequateForContentLength' | 'BlockCountExceedsLimit' | 'BlockListTooLong' | 'CannotChangeToLowerTier' | 'CannotVerifyCopySource' | 'ContainerAlreadyExists' | 'ContainerBeingDeleted' | 'ContainerDisabled' | 'ContainerNotFound' | 'ContentLengthLargerThanTierLimit' | 'CopyAcrossAccountsNotSupported' | 'CopyIdMismatch' | 'FeatureVersionMismatch' | 'IncrementalCopyBlobMismatch' | 'IncrementalCopyOfEralierVersionSnapshotNotAllowed' | 'IncrementalCopySourceMustBeSnapshot' | 'InfiniteLeaseDurationRequired' | 'InvalidBlobOrBlock' | 'InvalidBlobTier' | 'InvalidBlobType' | 'InvalidBlockId' | 'InvalidBlockList' | 'InvalidOperation' | 'InvalidPageRange' | 'InvalidSourceBlobType' | 'InvalidSourceBlobUrl' | 'InvalidVersionForPageBlobOperation' | 'LeaseAlreadyPresent' | 'LeaseAlreadyBroken' | 'LeaseIdMismatchWithBlobOperation' | 'LeaseIdMismatchWithContainerOperation' | 'LeaseIdMismatchWithLeaseOperation' | 'LeaseIdMissing' | 'LeaseIsBreakingAndCannotBeAcquired' | 'LeaseIsBreakingAndCannotBeChanged' | 'LeaseIsBrokenAndCannotBeRenewed' | 'LeaseLost' | 'LeaseNotPresentWithBlobOperation' | 'LeaseNotPresentWithContainerOperation' | 'LeaseNotPresentWithLeaseOperation' | 'MaxBlobSizeConditionNotMet' | 'NoPendingCopyOperation' | 'OperationNotAllowedOnIncrementalCopyBlob' | 'PendingCopyOperation' | 'PreviousSnapshotCannotBeNewer' | 'PreviousSnapshotNotFound' | 'PreviousSnapshotOperationNotSupported' | 'SequenceNumberConditionNotMet' | 'SequenceNumberIncrementTooLarge' | 'SnapshotCountExceeded' | 'SnaphotOperationRateExceeded' | 'SnapshotsPresent' | 'SourceConditionNotMet' | 'SystemInUse' | 'TargetConditionNotMet' | 'UnauthorizedBlobOverwrite' | 'BlobBeingRehydrated' | 'BlobArchived' | 'BlobNotArchived';\n\n/**\n * Defines values for GeoReplicationStatusType.\n * Possible values include: 'live', 'bootstrap', 'unavailable'\n * @readonly\n * @enum {string}\n */\nexport type GeoReplicationStatusType = 'live' | 'bootstrap' | 'unavailable';\n\n/**\n * Defines values for BlockListType.\n * Possible values include: 'committed', 'uncommitted', 'all'\n * @readonly\n * @enum {string}\n */\nexport type BlockListType = 'committed' | 'uncommitted' | 'all';\n\n/**\n * Defines values for DeleteSnapshotsOptionType.\n * Possible values include: 'include', 'only'\n * @readonly\n * @enum {string}\n */\nexport type DeleteSnapshotsOptionType = 'include' | 'only';\n\n/**\n * Defines values for ListBlobsIncludeItem.\n * Possible values include: 'snapshots', 'metadata', 'uncommittedblobs', 'copy', 'deleted'\n * @readonly\n * @enum {string}\n */\nexport type ListBlobsIncludeItem = 'snapshots' | 'metadata' | 'uncommittedblobs' | 'copy' | 'deleted';\n\n/**\n * Defines values for ListContainersIncludeType.\n * Possible values include: 'metadata'\n * @readonly\n * @enum {string}\n */\nexport type ListContainersIncludeType = 'metadata';\n\n/**\n * Defines values for SequenceNumberActionType.\n * Possible values include: 'max', 'update', 'increment'\n * @readonly\n * @enum {string}\n */\nexport type SequenceNumberActionType = 'max' | 'update' | 'increment';\n\n/**\n * Defines values for SkuName.\n * Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS',\n * 'Premium_LRS'\n * @readonly\n * @enum {string}\n */\nexport type SkuName = 'Standard_LRS' | 'Standard_GRS' | 'Standard_RAGRS' | 'Standard_ZRS' | 'Premium_LRS';\n\n/**\n * Defines values for AccountKind.\n * Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n * @readonly\n * @enum {string}\n */\nexport type AccountKind = 'Storage' | 'BlobStorage' | 'StorageV2';\n\n/**\n * Contains response data for the setProperties operation.\n */\nexport type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceSetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type ServiceGetPropertiesResponse = StorageServiceProperties & ServiceGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetPropertiesHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: StorageServiceProperties;\n    };\n};\n\n/**\n * Contains response data for the getStatistics operation.\n */\nexport type ServiceGetStatisticsResponse = StorageServiceStats & ServiceGetStatisticsHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetStatisticsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: StorageServiceStats;\n    };\n};\n\n/**\n * Contains response data for the listContainersSegment operation.\n */\nexport type ServiceListContainersSegmentResponse = ListContainersSegmentResponse & ServiceListContainersSegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceListContainersSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListContainersSegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type ServiceGetAccountInfoResponse = ServiceGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type ContainerCreateResponse = ContainerCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type ContainerGetPropertiesResponse = ContainerGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type ContainerDeleteResponse = ContainerDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the setMetadata operation.\n */\nexport type ContainerSetMetadataResponse = ContainerSetMetadataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerSetMetadataHeaders;\n    };\n};\n\n/**\n * Contains response data for the getAccessPolicy operation.\n */\nexport type ContainerGetAccessPolicyResponse = Array<SignedIdentifier> & ContainerGetAccessPolicyHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccessPolicyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifier[];\n    };\n};\n\n/**\n * Contains response data for the setAccessPolicy operation.\n */\nexport type ContainerSetAccessPolicyResponse = ContainerSetAccessPolicyHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerSetAccessPolicyHeaders;\n    };\n};\n\n/**\n * Contains response data for the acquireLease operation.\n */\nexport type ContainerAcquireLeaseResponse = ContainerAcquireLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerAcquireLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the releaseLease operation.\n */\nexport type ContainerReleaseLeaseResponse = ContainerReleaseLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerReleaseLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the renewLease operation.\n */\nexport type ContainerRenewLeaseResponse = ContainerRenewLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerRenewLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the breakLease operation.\n */\nexport type ContainerBreakLeaseResponse = ContainerBreakLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerBreakLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the changeLease operation.\n */\nexport type ContainerChangeLeaseResponse = ContainerChangeLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerChangeLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = ListBlobsFlatSegmentResponse & ContainerListBlobFlatSegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobFlatSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsFlatSegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = ListBlobsHierarchySegmentResponse & ContainerListBlobHierarchySegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobHierarchySegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsHierarchySegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type ContainerGetAccountInfoResponse = ContainerGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the download operation.\n */\nexport type BlobDownloadResponse = BlobDownloadHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   */\n  blobBody?: Promise<Blob>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobDownloadHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type BlobGetPropertiesResponse = BlobGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type BlobDeleteResponse = BlobDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the undelete operation.\n */\nexport type BlobUndeleteResponse = BlobUndeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobUndeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the setHTTPHeaders operation.\n */\nexport type BlobSetHTTPHeadersResponse = BlobSetHTTPHeadersHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetHTTPHeadersHeaders;\n    };\n};\n\n/**\n * Contains response data for the setMetadata operation.\n */\nexport type BlobSetMetadataResponse = BlobSetMetadataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetMetadataHeaders;\n    };\n};\n\n/**\n * Contains response data for the acquireLease operation.\n */\nexport type BlobAcquireLeaseResponse = BlobAcquireLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobAcquireLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the releaseLease operation.\n */\nexport type BlobReleaseLeaseResponse = BlobReleaseLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobReleaseLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the renewLease operation.\n */\nexport type BlobRenewLeaseResponse = BlobRenewLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobRenewLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the changeLease operation.\n */\nexport type BlobChangeLeaseResponse = BlobChangeLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobChangeLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the breakLease operation.\n */\nexport type BlobBreakLeaseResponse = BlobBreakLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobBreakLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the createSnapshot operation.\n */\nexport type BlobCreateSnapshotResponse = BlobCreateSnapshotHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobCreateSnapshotHeaders;\n    };\n};\n\n/**\n * Contains response data for the startCopyFromURL operation.\n */\nexport type BlobStartCopyFromURLResponse = BlobStartCopyFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobStartCopyFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the abortCopyFromURL operation.\n */\nexport type BlobAbortCopyFromURLResponse = BlobAbortCopyFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobAbortCopyFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the setTier operation.\n */\nexport type BlobSetTierResponse = BlobSetTierHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetTierHeaders;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type BlobGetAccountInfoResponse = BlobGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type PageBlobCreateResponse = PageBlobCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the uploadPages operation.\n */\nexport type PageBlobUploadPagesResponse = PageBlobUploadPagesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobUploadPagesHeaders;\n    };\n};\n\n/**\n * Contains response data for the clearPages operation.\n */\nexport type PageBlobClearPagesResponse = PageBlobClearPagesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobClearPagesHeaders;\n    };\n};\n\n/**\n * Contains response data for the getPageRanges operation.\n */\nexport type PageBlobGetPageRangesResponse = PageList & PageBlobGetPageRangesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobGetPageRangesHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PageList;\n    };\n};\n\n/**\n * Contains response data for the getPageRangesDiff operation.\n */\nexport type PageBlobGetPageRangesDiffResponse = PageList & PageBlobGetPageRangesDiffHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PageList;\n    };\n};\n\n/**\n * Contains response data for the resize operation.\n */\nexport type PageBlobResizeResponse = PageBlobResizeHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobResizeHeaders;\n    };\n};\n\n/**\n * Contains response data for the updateSequenceNumber operation.\n */\nexport type PageBlobUpdateSequenceNumberResponse = PageBlobUpdateSequenceNumberHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobUpdateSequenceNumberHeaders;\n    };\n};\n\n/**\n * Contains response data for the copyIncremental operation.\n */\nexport type PageBlobCopyIncrementalResponse = PageBlobCopyIncrementalHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobCopyIncrementalHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type AppendBlobCreateResponse = AppendBlobCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: AppendBlobCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the appendBlock operation.\n */\nexport type AppendBlobAppendBlockResponse = AppendBlobAppendBlockHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: AppendBlobAppendBlockHeaders;\n    };\n};\n\n/**\n * Contains response data for the upload operation.\n */\nexport type BlockBlobUploadResponse = BlockBlobUploadHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobUploadHeaders;\n    };\n};\n\n/**\n * Contains response data for the stageBlock operation.\n */\nexport type BlockBlobStageBlockResponse = BlockBlobStageBlockHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobStageBlockHeaders;\n    };\n};\n\n/**\n * Contains response data for the stageBlockFromURL operation.\n */\nexport type BlockBlobStageBlockFromURLResponse = BlockBlobStageBlockFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobStageBlockFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the commitBlockList operation.\n */\nexport type BlockBlobCommitBlockListResponse = BlockBlobCommitBlockListHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobCommitBlockListHeaders;\n    };\n};\n\n/**\n * Contains response data for the getBlockList operation.\n */\nexport type BlockBlobGetBlockListResponse = BlockList & BlockBlobGetBlockListHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobGetBlockListHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BlockList;\n    };\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike, isNode } from \"@azure/core-http\";\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call Aborter.none to create a new Aborter instance without timeout.\n * - Call Aborter.timeout() to create a new Aborter instance with timeout.\n *\n * For an existing instance aborter:\n * - Call aborter.withTimeout() to create and return a child Aborter instance with timeout.\n * - Call aborter.withValue(key, value) to create and return a child Aborter instance with key/value pair.\n * - Call aborter.abort() to abort current instance and all children instances.\n * - Call aborter.getValue(key) to search and get value with corresponding key from current aborter to all parents.\n *\n * @example\n * // Abort without timeout\n * await blockBlobClient.upload(buf, buf.length);\n *\n * @example\n * // Abort container create in 1000ms\n * await blockBlobClient.upload(Aborter.timeout(1000), buf, buf.length);\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time, abort another when any of them is finished\n * const aborter = Aborter.timeout(30 * 1000);\n * blockBlobClient1.upload(aborter, buf, buf.length).then(aborter.abort);\n * blockBlobClient2.upload(aborter, buf, buf.length).then(aborter.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await blockBlobClient.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n * await blockBlobClient.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n *\n * @export\n * @class Aborter\n * @implements {AbortSignalLike}\n */\n\nexport class Aborter implements AbortSignalLike {\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof Aborter\n   */\n  public get aborted(): boolean {\n    return this._aborted;\n  }\n\n  /**\n   * Creates a new Aborter instance without timeout.\n   *\n   * @readonly\n   * @static\n   * @type {Aborter}\n   * @memberof Aborter\n   */\n  public static get none(): Aborter {\n    return new Aborter(undefined, 0);\n  }\n\n  /**\n   * Creates a new Aborter instance with timeout in milliseconds.\n   * Set parameter timeout to 0 will not create a timer.\n   *\n   * @static\n   * @param {number} {timeout} in milliseconds\n   * @returns {Aborter}\n   * @memberof Aborter\n   */\n  public static timeout(timeout: number): Aborter {\n    return new Aborter(undefined, timeout);\n  }\n\n  /**\n   * onabort event listener.\n   *\n   * @memberof Aborter\n   */\n  public onabort?: (ev?: Event) => any;\n\n  // tslint:disable-next-line:variable-name\n  private _aborted: boolean = false;\n  private timer?: any;\n  private readonly parent?: Aborter;\n  private readonly children: Aborter[] = []; // When child object calls dispose(), remove child from here\n  private readonly abortEventListeners: Array<(this: AbortSignalLike, ev?: any) => any> = [];\n  // Pipeline proxies need to use \"abortSignal as Aborter\" in order to access non AbortSignalLike methods\n  // immutable primitive types\n  private readonly key?: string;\n  private readonly value?: string | number | boolean | null;\n  // private disposed: boolean = false;\n\n  /**\n   * Private constructor for internal usage, creates an instance of Aborter.\n   *\n   * @param {Aborter} [parent] Optional. Parent aborter.\n   * @param {number} [timeout=0] Optional. Timeout before abort in millisecond, 0 means no timeout.\n   * @param {string} [key] Optional. Immutable key in string.\n   * @param {(string | number | boolean | null)} [value] Optional. Immutable value.\n   * @memberof Aborter\n   */\n  private constructor(\n    parent?: Aborter,\n    timeout: number = 0,\n    key?: string,\n    value?: string | number | boolean | null\n  ) {\n    this.parent = parent;\n    this.key = key;\n    this.value = value;\n\n    if (timeout > 0) {\n      this.timer = setTimeout(() => {\n        this.abort.call(this);\n      }, timeout);\n\n      // When called, the active Timeout object will not require the Node.js event loop\n      // to remain active. If there is no other activity keeping the event loop running,\n      // the process may exit before the Timeout object's callback is invoked.\n      if (this.timer && isNode) {\n        this.timer!.unref();\n      }\n    }\n  }\n\n  /**\n   * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n   * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n   * triggers timeout event, all children nodes abort event will be triggered too.\n   *\n   * When timeout parameter (in millisecond) is larger than 0, the abort event will be triggered when timeout.\n   * Otherwise, call abort() method to manually abort.\n   *\n   * @param {number} {timeout} Timeout in millisecond.\n   * @returns {Aborter} The new Aborter instance created.\n   * @memberof Aborter\n   */\n  public withTimeout(timeout: number): Aborter {\n    const childCancelContext = new Aborter(this, timeout);\n    this.children.push(childCancelContext);\n    return childCancelContext;\n  }\n\n  /**\n   * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n   * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n   * triggers timeout event, all children nodes abort event will be triggered too.\n   *\n   * Immutable key value pair will be set into the new created Aborter instance.\n   * Call getValue() to find out latest value with corresponding key in the chain of\n   * [current node] -> [parent node] and [grand parent node]....\n   *\n   * @param {string} key\n   * @param {(string | number | boolean | null)} [value]\n   * @returns {Aborter}\n   * @memberof Aborter\n   */\n  public withValue(key: string, value?: string | number | boolean | null): Aborter {\n    const childCancelContext = new Aborter(this, 0, key, value);\n    this.children.push(childCancelContext);\n    return childCancelContext;\n  }\n\n  /**\n   * Find out latest value with corresponding key in the chain of\n   * [current node] -> [parent node] -> [grand parent node] -> ... -> [root node].\n   *\n   * If key is not found, undefined will be returned.\n   *\n   * @param {string} key\n   * @returns {(string | number | boolean | null | undefined)}\n   * @memberof Aborter\n   */\n  public getValue(key: string): string | number | boolean | null | undefined {\n    for (let parent: Aborter | undefined = this; parent; parent = parent.parent) {\n      if (parent.key === key) {\n        return parent.value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Trigger abort event immediately, the onabort and all abort event listeners will be triggered.\n   * Will try to trigger abort event for all children Aborter nodes.\n   *\n   * - If there is a timeout, the timer will be cancelled.\n   * - If aborted is true, nothing will happen.\n   *\n   * @returns\n   * @memberof Aborter\n   */\n  public abort() {\n    if (this.aborted) {\n      return;\n    }\n    this.cancelTimer();\n\n    if (this.onabort) {\n      this.onabort.call(this);\n    }\n\n    this.abortEventListeners.forEach((listener) => {\n      listener.call(this);\n    });\n\n    this.children.forEach((child) => child.cancelByParent());\n\n    this._aborted = true;\n  }\n\n  // public dispose() {\n  //   if (this.disposed || this.aborted) {\n  //     return;\n  //   }\n\n  //   this.cancelTimer();\n\n  //   // (parent)A <- B <- C(child), if B disposes, when A abort, C will not abort\n  //   if (this.parent) {\n  //     const index = this.parent.children.indexOf(this);\n  //     if (index > -1) {\n  //       this.parent.children.splice(index, 1);\n  //     }\n  //   }\n\n  //   this.disposed = true;\n  // }\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof Aborter\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    this.abortEventListeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof Aborter\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    const index = this.abortEventListeners.indexOf(listener);\n    if (index > -1) {\n      this.abortEventListeners.splice(index, 1);\n    }\n  }\n\n  private cancelByParent() {\n    // if (!this.disposed) {\n    this.abort();\n    // }\n  }\n\n  private cancelTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        xmlName: \"Message\",\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        xmlName: \"Expiry\",\n        required: true,\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permission: {\n        xmlName: \"Permission\",\n        required: true,\n        serializedName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobProperties: coreHttp.CompositeMapper = {\n  xmlName: \"Properties\",\n  serializedName: \"BlobProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobProperties\",\n    modelProperties: {\n      creationTime: {\n        xmlName: \"Creation-Time\",\n        serializedName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        xmlName: \"Content-Length\",\n        serializedName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        xmlName: \"Content-Type\",\n        serializedName: \"Content-Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        xmlName: \"Content-Encoding\",\n        serializedName: \"Content-Encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        xmlName: \"Content-Language\",\n        serializedName: \"Content-Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        xmlName: \"Content-MD5\",\n        serializedName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentDisposition: {\n        xmlName: \"Content-Disposition\",\n        serializedName: \"Content-Disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        xmlName: \"Cache-Control\",\n        serializedName: \"Cache-Control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        xmlName: \"x-ms-blob-sequence-number\",\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        xmlName: \"BlobType\",\n        serializedName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      copyId: {\n        xmlName: \"CopyId\",\n        serializedName: \"CopyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        xmlName: \"CopyStatus\",\n        serializedName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      copySource: {\n        xmlName: \"CopySource\",\n        serializedName: \"CopySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        xmlName: \"CopyProgress\",\n        serializedName: \"CopyProgress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyCompletionTime: {\n        xmlName: \"CopyCompletionTime\",\n        serializedName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        xmlName: \"CopyStatusDescription\",\n        serializedName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEncrypted: {\n        xmlName: \"ServerEncrypted\",\n        serializedName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      incrementalCopy: {\n        xmlName: \"IncrementalCopy\",\n        serializedName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        xmlName: \"DestinationSnapshot\",\n        serializedName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedTime: {\n        xmlName: \"DeletedTime\",\n        serializedName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        xmlName: \"RemainingRetentionDays\",\n        serializedName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        xmlName: \"AccessTier\",\n        serializedName: \"AccessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        xmlName: \"AccessTierInferred\",\n        serializedName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        xmlName: \"ArchiveStatus\",\n        serializedName: \"ArchiveStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        xmlName: \"AccessTierChangeTime\",\n        serializedName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobItem: coreHttp.CompositeMapper = {\n  xmlName: \"Blob\",\n  serializedName: \"BlobItem\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        xmlName: \"Deleted\",\n        required: true,\n        serializedName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      snapshot: {\n        xmlName: \"Snapshot\",\n        required: true,\n        serializedName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobFlatListSegment: coreHttp.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobFlatListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsFlatSegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        required: true,\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        required: true,\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        required: true,\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        xmlName: \"Delimiter\",\n        required: true,\n        serializedName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\"\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobPrefix: coreHttp.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHierarchyListSegment: coreHttp.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobHierarchyListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        serializedName: \"BlobPrefixes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\"\n            }\n          }\n        }\n      },\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        required: true,\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        required: true,\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        required: true,\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        xmlName: \"Delimiter\",\n        required: true,\n        serializedName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\"\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Block: coreHttp.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        xmlName: \"Size\",\n        required: true,\n        serializedName: \"Size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockList: coreHttp.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"CommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"CommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      },\n      uncommittedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"UncommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"UncommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlockLookupList: coreHttp.CompositeMapper = {\n  xmlName: \"BlockList\",\n  serializedName: \"BlockLookupList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        serializedName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uncommitted: {\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        serializedName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      latest: {\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        serializedName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProperties: coreHttp.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      publicAccess: {\n        xmlName: \"PublicAccess\",\n        serializedName: \"PublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        xmlName: \"HasImmutabilityPolicy\",\n        serializedName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        xmlName: \"HasLegalHold\",\n        serializedName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerItem: coreHttp.CompositeMapper = {\n  xmlName: \"Container\",\n  serializedName: \"ContainerItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainersSegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListContainersSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        required: true,\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        required: true,\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      containerItems: {\n        xmlIsWrapped: true,\n        xmlName: \"Containers\",\n        xmlElementName: \"Container\",\n        required: true,\n        serializedName: \"ContainerItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\"\n            }\n          }\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        required: true,\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        xmlName: \"AllowedOrigins\",\n        required: true,\n        serializedName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        xmlName: \"AllowedMethods\",\n        required: true,\n        serializedName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        xmlName: \"AllowedHeaders\",\n        required: true,\n        serializedName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        xmlName: \"ExposedHeaders\",\n        required: true,\n        serializedName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        xmlName: \"MaxAgeInSeconds\",\n        required: true,\n        serializedName: \"MaxAgeInSeconds\",\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoReplication: coreHttp.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        xmlName: \"Status\",\n        required: true,\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSyncTime: {\n        xmlName: \"LastSyncTime\",\n        required: true,\n        serializedName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        xmlName: \"Days\",\n        serializedName: \"Days\",\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Logging: coreHttp.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        required: true,\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteProperty: {\n        xmlName: \"Delete\",\n        required: true,\n        serializedName: \"Delete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      read: {\n        xmlName: \"Read\",\n        required: true,\n        serializedName: \"Read\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      write: {\n        xmlName: \"Write\",\n        required: true,\n        serializedName: \"Write\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        required: true,\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        xmlName: \"IncludeAPIs\",\n        serializedName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageRange: coreHttp.CompositeMapper = {\n  serializedName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: coreHttp.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageList: coreHttp.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        serializedName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\"\n            }\n          }\n        }\n      },\n      clearRange: {\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        serializedName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        xmlName: \"Id\",\n        required: true,\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        xmlName: \"AccessPolicy\",\n        required: true,\n        serializedName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const StaticWebsite: coreHttp.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      indexDocument: {\n        xmlName: \"IndexDocument\",\n        serializedName: \"IndexDocument\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDocument404Path: {\n        xmlName: \"ErrorDocument404Path\",\n        serializedName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageServiceProperties: coreHttp.CompositeMapper = {\n  serializedName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageServiceProperties\",\n    modelProperties: {\n      logging: {\n        xmlName: \"Logging\",\n        serializedName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\"\n        }\n      },\n      hourMetrics: {\n        xmlName: \"HourMetrics\",\n        serializedName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        xmlName: \"MinuteMetrics\",\n        serializedName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        xmlIsWrapped: true,\n        xmlName: \"Cors\",\n        xmlElementName: \"CorsRule\",\n        serializedName: \"Cors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      defaultServiceVersion: {\n        xmlName: \"DefaultServiceVersion\",\n        serializedName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRetentionPolicy: {\n        xmlName: \"DeleteRetentionPolicy\",\n        serializedName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      },\n      staticWebsite: {\n        xmlName: \"StaticWebsite\",\n        serializedName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageServiceStats: coreHttp.CompositeMapper = {\n  serializedName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageServiceStats\",\n    modelProperties: {\n      geoReplication: {\n        xmlName: \"GeoReplication\",\n        serializedName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"lease-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"LeaseAccessConditions\",\n    modelProperties: {\n      leaseId: {\n        xmlName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModifiedAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"ModifiedAccessConditions\",\n    modelProperties: {\n      ifModifiedSince: {\n        xmlName: \"ifModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifUnmodifiedSince: {\n        xmlName: \"ifUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifMatch: {\n        xmlName: \"ifMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ifNoneMatch: {\n        xmlName: \"ifNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHTTPHeaders: coreHttp.CompositeMapper = {\n  xmlName: \"blob-HTTP-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHTTPHeaders\",\n    modelProperties: {\n      blobCacheControl: {\n        xmlName: \"blobCacheControl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentType: {\n        xmlName: \"blobContentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        xmlName: \"blobContentMD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobContentEncoding: {\n        xmlName: \"blobContentEncoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLanguage: {\n        xmlName: \"blobContentLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentDisposition: {\n        xmlName: \"blobContentDisposition\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceModifiedAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"source-modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SourceModifiedAccessConditions\",\n    modelProperties: {\n      sourceIfModifiedSince: {\n        xmlName: \"sourceIfModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfUnmodifiedSince: {\n        xmlName: \"sourceIfUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfMatch: {\n        xmlName: \"sourceIfMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceIfNoneMatch: {\n        xmlName: \"sourceIfNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SequenceNumberAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"sequence-number-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SequenceNumberAccessConditions\",\n    modelProperties: {\n      ifSequenceNumberLessThanOrEqualTo: {\n        xmlName: \"ifSequenceNumberLessThanOrEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberLessThan: {\n        xmlName: \"ifSequenceNumberLessThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberEqualTo: {\n        xmlName: \"ifSequenceNumberEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendPositionAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"append-position-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendPositionAccessConditions\",\n    modelProperties: {\n      maxSize: {\n        xmlName: \"maxSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appendPosition: {\n        xmlName: \"appendPosition\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getstatistics-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListContainersSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-listcontainerssegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-setaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobFlatSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-listblobflatsegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-listblobhierarchysegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobHierarchySegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-download-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      creationTime: {\n        serializedName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"appendblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobUploadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-upload-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobUndeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-undelete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetHTTPHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-sethttpheaders-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHTTPHeadersHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-createsnapshot-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStartCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-startcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-abortcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTierHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-settier-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-stageblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-stageblockfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobCommitBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-commitblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobGetBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-getblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-uploadpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobClearPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-clearpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-getpageranges-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesDiffHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-getpagerangesdiff-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobResizeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-resize-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-updatesequencenumber-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCopyIncrementalHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-copyincremental-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"appendblob-appendblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ContainerItem,\n  ContainerProperties,\n  CorsRule,\n  GeoReplication,\n  ListContainersSegmentResponse,\n  Logging,\n  Metrics,\n  RetentionPolicy,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  StaticWebsite,\n  StorageError,\n  StorageServiceProperties,\n  StorageServiceStats\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const access: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"access\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action0: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'acquire',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action1: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'release',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action2: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'renew',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action3: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'break',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action4: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'change',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const appendPosition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobCacheControl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobCacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentDisposition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentEncoding: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLanguage: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLength: coreHttp.OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const blobContentType: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobSequenceNumber: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobSequenceNumber\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-sequence-number\",\n    defaultValue: 0,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobType0: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'PageBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType1: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'AppendBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType2: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'BlockBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blockId: coreHttp.OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    required: true,\n    serializedName: \"blockid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const breakPeriod: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"breakPeriod\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const comp0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'properties',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'stats',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp10: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'page',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp11: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'pagelist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp12: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'incrementalcopy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp13: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'appendblock',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp14: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'block',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp15: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'blocklist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'list',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp3: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'metadata',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp4: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'acl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp5: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'lease',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp6: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'undelete',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp7: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'snapshot',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp8: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'copy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp9: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'tier',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLength: coreHttp.OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const copyActionAbortConstant: coreHttp.OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    defaultValue: 'abort',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copyId: coreHttp.OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    required: true,\n    serializedName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copySource: coreHttp.OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deleteSnapshots: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"deleteSnapshots\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"include\",\n        \"only\"\n      ]\n    }\n  }\n};\nexport const delimiter: coreHttp.OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    required: true,\n    serializedName: \"delimiter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const duration: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"duration\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const ifNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifSequenceNumberEqualTo: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThan: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThanOrEqualTo: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const include0: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"metadata\"\n      ]\n    }\n  }\n};\nexport const include1: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"snapshots\",\n            \"metadata\",\n            \"uncommittedblobs\",\n            \"copy\",\n            \"deleted\"\n          ]\n        }\n      }\n    }\n  },\n  collectionFormat: coreHttp.QueryCollectionFormat.Csv\n};\nexport const leaseId0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"leaseAccessConditions\",\n    \"leaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const leaseId1: coreHttp.OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const listType: coreHttp.OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    required: true,\n    serializedName: \"blocklisttype\",\n    defaultValue: 'committed',\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"committed\",\n        \"uncommitted\",\n        \"all\"\n      ]\n    }\n  }\n};\nexport const marker: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"marker\"\n  ],\n  mapper: {\n    serializedName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxresults: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxresults\"\n  ],\n  mapper: {\n    serializedName: \"maxresults\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const maxSize: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"maxSize\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const metadata: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"metadata\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: {\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\nexport const nextPageLink: coreHttp.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const pageWrite0: coreHttp.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'update',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const pageWrite1: coreHttp.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'clear',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prefix: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prefix\"\n  ],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prevsnapshot: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prevsnapshot\"\n  ],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"proposedLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId1: coreHttp.OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"range\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const rangeGetContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rangeGetContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const requestId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"requestId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'service',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'account',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'container',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sequenceNumberAction: coreHttp.OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"max\",\n        \"update\",\n        \"increment\"\n      ]\n    }\n  }\n};\nexport const snapshot: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"snapshot\"\n  ],\n  mapper: {\n    serializedName: \"snapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceIfMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceIfNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceRange: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceRange\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceUrl: coreHttp.OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tier: coreHttp.OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-access-tier\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timeout: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timeout\"\n  ],\n  mapper: {\n    serializedName: \"timeout\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const transactionalContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"transactionalContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const url: coreHttp.OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    required: true,\n    serializedName: \"url\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const version: coreHttp.OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    defaultValue: '2018-03-28',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Service.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param storageServiceProperties The StorageService properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceSetPropertiesResponse>\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;\n  /**\n   * @param storageServiceProperties The StorageService properties.\n   * @param callback The callback\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param storageServiceProperties The StorageService properties.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        storageServiceProperties,\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<Models.StorageServiceProperties>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<Models.StorageServiceProperties>): void;\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams | coreHttp.ServiceCallback<Models.StorageServiceProperties>, callback?: coreHttp.ServiceCallback<Models.StorageServiceProperties>): Promise<Models.ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the\n   * storage account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetStatisticsResponse>\n   */\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams): Promise<Models.ServiceGetStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getStatistics(callback: coreHttp.ServiceCallback<Models.StorageServiceStats>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStatistics(options: Models.ServiceGetStatisticsOptionalParams, callback: coreHttp.ServiceCallback<Models.StorageServiceStats>): void;\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams | coreHttp.ServiceCallback<Models.StorageServiceStats>, callback?: coreHttp.ServiceCallback<Models.StorageServiceStats>): Promise<Models.ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getStatisticsOperationSpec,\n      callback) as Promise<Models.ServiceGetStatisticsResponse>;\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified\n   * account\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceListContainersSegmentResponse>\n   */\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams): Promise<Models.ServiceListContainersSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listContainersSegment(callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listContainersSegment(options: Models.ServiceListContainersSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): Promise<Models.ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listContainersSegmentOperationSpec,\n      callback) as Promise<Models.ServiceListContainersSegmentResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.ServiceGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ServiceGetAccountInfoResponse>;\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified\n   * account\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceListContainersSegmentResponse>\n   */\n  listContainersSegmentNext(nextPageLink: string, options?: Models.ServiceListContainersSegmentNextOptionalParams): Promise<Models.ServiceListContainersSegmentResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listContainersSegmentNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listContainersSegmentNext(nextPageLink: string, options: Models.ServiceListContainersSegmentNextOptionalParams, callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  listContainersSegmentNext(nextPageLink: string, options?: Models.ServiceListContainersSegmentNextOptionalParams | coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): Promise<Models.ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listContainersSegmentNextOperationSpec,\n      callback) as Promise<Models.ServiceListContainersSegmentResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"storageServiceProperties\",\n    mapper: {\n      ...Mappers.StorageServiceProperties,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp1\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceStats,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listContainersSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include0,\n    Parameters.timeout,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listContainersSegmentNextOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"{url}\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AccessPolicy,\n  BlobFlatListSegment,\n  BlobHierarchyListSegment,\n  BlobItem,\n  BlobPrefix,\n  BlobProperties,\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerChangeLeaseHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccountInfoHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerReleaseLeaseHeaders,\n  ContainerRenewLeaseHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  SignedIdentifier,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/containerMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Container. */\nexport class Container {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Container.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerCreateResponse>\n   */\n  create(options?: Models.ContainerCreateOptionalParams): Promise<Models.ContainerCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.ContainerCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.ContainerCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ContainerCreateResponse>;\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams): Promise<Models.ContainerGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ContainerGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ContainerGetPropertiesResponse>;\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained\n   * within it are later deleted during garbage collection\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerDeleteResponse>\n   */\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams): Promise<Models.ContainerDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.ContainerDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ContainerDeleteResponse>;\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetMetadataResponse>\n   */\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams): Promise<Models.ContainerSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.ContainerSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.ContainerSetMetadataResponse>;\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container\n   * data may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams): Promise<Models.ContainerGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.ContainerGetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams | coreHttp.ServiceCallback<Models.SignedIdentifier[]>, callback?: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerGetAccessPolicyResponse>;\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams): Promise<Models.ContainerSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.ContainerSetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerSetAccessPolicyResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams): Promise<Models.ContainerAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.ContainerAcquireLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.ContainerAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams): Promise<Models.ContainerReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.ContainerReleaseLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.ContainerReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams): Promise<Models.ContainerRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.ContainerRenewLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.ContainerRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerBreakLeaseResponse>\n   */\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams): Promise<Models.ContainerBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.ContainerBreakLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.ContainerBreakLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams): Promise<Models.ContainerChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.ContainerChangeLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.ContainerChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobFlatSegmentResponse>\n   */\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams): Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBlobFlatSegment(callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobFlatSegment(options: Models.ContainerListBlobFlatSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBlobFlatSegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobHierarchySegmentResponse>\n   */\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams): Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, options: Models.ContainerListBlobHierarchySegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        delimiter,\n        options\n      },\n      listBlobHierarchySegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.ContainerGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ContainerGetAccountInfoResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobFlatSegmentResponse>\n   */\n  listBlobFlatSegmentNext(nextPageLink: string, options?: Models.ContainerListBlobFlatSegmentNextOptionalParams): Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listBlobFlatSegmentNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobFlatSegmentNext(nextPageLink: string, options: Models.ContainerListBlobFlatSegmentNextOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  listBlobFlatSegmentNext(nextPageLink: string, options?: Models.ContainerListBlobFlatSegmentNextOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listBlobFlatSegmentNextOperationSpec,\n      callback) as Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobHierarchySegmentResponse>\n   */\n  listBlobHierarchySegmentNext(nextPageLink: string, options?: Models.ContainerListBlobHierarchySegmentNextOptionalParams): Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listBlobHierarchySegmentNext(nextPageLink: string, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobHierarchySegmentNext(nextPageLink: string, options: Models.ContainerListBlobHierarchySegmentNextOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  listBlobHierarchySegmentNext(nextPageLink: string, options?: Models.ContainerListBlobHierarchySegmentNextOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listBlobHierarchySegmentNextOperationSpec,\n      callback) as Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"containerAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"containerAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobFlatSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include1,\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobHierarchySegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.delimiter,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include1,\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobFlatSegmentNextOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"{url}\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobHierarchySegmentNextOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"{url}\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BlobAbortCopyFromURLHeaders,\n  BlobAcquireLeaseHeaders,\n  BlobBreakLeaseHeaders,\n  BlobChangeLeaseHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDownloadHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesHeaders,\n  BlobReleaseLeaseHeaders,\n  BlobRenewLeaseHeaders,\n  BlobSetHTTPHeadersHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Blob. */\nexport class Blob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Blob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDownloadResponse>\n   */\n  download(options?: Models.BlobDownloadOptionalParams): Promise<Models.BlobDownloadResponse>;\n  /**\n   * @param callback The callback\n   */\n  download(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  download(options: Models.BlobDownloadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  download(options?: Models.BlobDownloadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobDownloadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      downloadOperationSpec,\n      callback) as Promise<Models.BlobDownloadResponse>;\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and\n   * system properties for the blob. It does not return the content of the blob.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetPropertiesResponse>\n   */\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams): Promise<Models.BlobGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.BlobGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.BlobGetPropertiesResponse>;\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days\n   * specified by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data\n   * is permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify\n   * the \"include=deleted\" query parameter to discover which blobs and snapshots have been soft\n   * deleted. You can then use the Undelete Blob API to restore a soft-deleted blob. All other\n   * operations on a soft-deleted blob or snapshot causes the service to return an HTTP status code\n   * of 404 (ResourceNotFound).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDeleteResponse>\n   */\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams): Promise<Models.BlobDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.BlobDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.BlobDeleteResponse>;\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobUndeleteResponse>\n   */\n  undelete(options?: Models.BlobUndeleteOptionalParams): Promise<Models.BlobUndeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  undelete(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  undelete(options: Models.BlobUndeleteOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  undelete(options?: Models.BlobUndeleteOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobUndeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      undeleteOperationSpec,\n      callback) as Promise<Models.BlobUndeleteResponse>;\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetHTTPHeadersResponse>\n   */\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams): Promise<Models.BlobSetHTTPHeadersResponse>;\n  /**\n   * @param callback The callback\n   */\n  setHTTPHeaders(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setHTTPHeaders(options: Models.BlobSetHTTPHeadersOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetHTTPHeadersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setHTTPHeadersOperationSpec,\n      callback) as Promise<Models.BlobSetHTTPHeadersResponse>;\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetMetadataResponse>\n   */\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams): Promise<Models.BlobSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.BlobSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.BlobSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams): Promise<Models.BlobAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.BlobAcquireLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.BlobAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams): Promise<Models.BlobReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.BlobReleaseLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.BlobReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams): Promise<Models.BlobRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.BlobRenewLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.BlobRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams): Promise<Models.BlobChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.BlobChangeLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.BlobChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobBreakLeaseResponse>\n   */\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams): Promise<Models.BlobBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.BlobBreakLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.BlobBreakLeaseResponse>;\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobCreateSnapshotResponse>\n   */\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams): Promise<Models.BlobCreateSnapshotResponse>;\n  /**\n   * @param callback The callback\n   */\n  createSnapshot(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createSnapshot(options: Models.BlobCreateSnapshotOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createSnapshotOperationSpec,\n      callback) as Promise<Models.BlobCreateSnapshotResponse>;\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobStartCopyFromURLResponse>\n   */\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams): Promise<Models.BlobStartCopyFromURLResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, options: Models.BlobStartCopyFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      startCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobStartCopyFromURLResponse>;\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a\n   * destination blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAbortCopyFromURLResponse>\n   */\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams): Promise<Models.BlobAbortCopyFromURLResponse>;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, options: Models.BlobAbortCopyFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copyId,\n        options\n      },\n      abortCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobAbortCopyFromURLResponse>;\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a\n   * premium storage account and on a block blob in a blob storage account (locally redundant storage\n   * only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob.\n   * A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the\n   * blob's ETag.\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetTierResponse>\n   */\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams): Promise<Models.BlobSetTierResponse>;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, options: Models.BlobSetTierOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tier,\n        options\n      },\n      setTierOperationSpec,\n      callback) as Promise<Models.BlobSetTierResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.BlobGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.BlobGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.range,\n    Parameters.rangeGetContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.deleteSnapshots,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst undeleteOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setHTTPHeadersOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst startCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst abortCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.copyId,\n    Parameters.timeout,\n    Parameters.comp8\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.copyActionAbortConstant,\n    Parameters.leaseId0\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setTierOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.tier,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blobName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ClearRange,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList,\n  PageRange,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a PageBlob. */\nexport class PageBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a PageBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCreateResponse>\n   */\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams): Promise<Models.PageBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, options: Models.PageBlobCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        blobContentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.PageBlobCreateResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesResponse>\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams): Promise<Models.PageBlobUploadPagesResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.PageBlobUploadPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadPagesOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesResponse>;\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobClearPagesResponse>\n   */\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams): Promise<Models.PageBlobClearPagesResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, options: Models.PageBlobClearPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      clearPagesOperationSpec,\n      callback) as Promise<Models.PageBlobClearPagesResponse>;\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot\n   * of a page blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesResponse>\n   */\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams): Promise<Models.PageBlobGetPageRangesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRanges(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRanges(options: Models.PageBlobGetPageRangesOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesResponse>;\n  }\n\n  /**\n   * [Update] The Get Page Ranges Diff operation returns the list of valid page ranges for a page\n   * blob that were changed between target blob and previous snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesDiffResponse>\n   */\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams): Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRangesDiff(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRangesDiff(options: Models.PageBlobGetPageRangesDiffOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesDiffOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobResizeResponse>\n   */\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams): Promise<Models.PageBlobResizeResponse>;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, options: Models.PageBlobResizeOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blobContentLength,\n        options\n      },\n      resizeOperationSpec,\n      callback) as Promise<Models.PageBlobResizeResponse>;\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUpdateSequenceNumberResponse>\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams): Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options: Models.PageBlobUpdateSequenceNumberOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sequenceNumberAction,\n        options\n      },\n      updateSequenceNumberOperationSpec,\n      callback) as Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page\n   * blob. The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination. The copied snapshots are complete copies of\n   * the original snapshot and can be read or copied from as usual. This API is supported since REST\n   * version 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCopyIncrementalResponse>\n   */\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams): Promise<Models.PageBlobCopyIncrementalResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, options: Models.PageBlobCopyIncrementalOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyIncrementalOperationSpec,\n      callback) as Promise<Models.PageBlobCopyIncrementalResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType0,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.range,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst clearPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.range,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite1,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.range,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesDiffOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout,\n    Parameters.prevsnapshot,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.range,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst resizeOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.blobContentLength,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst updateSequenceNumberOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.sequenceNumberAction,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyIncrementalOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/appendBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a AppendBlob. */\nexport class AppendBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a AppendBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobCreateResponse>\n   */\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams): Promise<Models.AppendBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  create(contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, options: Models.AppendBlobCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.AppendBlobCreateResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob.\n   * The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobAppendBlockResponse>\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams): Promise<Models.AppendBlobAppendBlockResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.AppendBlobAppendBlockOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      appendBlockOperationSpec,\n      callback) as Promise<Models.AppendBlobAppendBlockResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType1,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst appendBlockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp13\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Block,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  BlockList,\n  BlockLookupList,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blockBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a BlockBlob. */\nexport class BlockBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a BlockBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an\n   * existing block blob overwrites any existing metadata on the blob. Partial updates are not\n   * supported with Put Blob; the content of the existing blob is overwritten with the content of the\n   * new blob. To perform a partial update of the content of a block blob, use the Put Block List\n   * operation.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobUploadResponse>\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams): Promise<Models.BlockBlobUploadResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.BlockBlobUploadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadOperationSpec,\n      callback) as Promise<Models.BlockBlobUploadResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockResponse>\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams): Promise<Models.BlockBlobStageBlockResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options: Models.BlockBlobStageBlockOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        body,\n        options\n      },\n      stageBlockOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the\n   * contents are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockFromURLResponse>\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams): Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options: Models.BlockBlobStageBlockFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        sourceUrl,\n        options\n      },\n      stageBlockFromURLOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up\n   * the blob. In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior Put Block operation. You can call Put Block List to update a blob by\n   * uploading only those blocks that have changed, then committing the new and existing blocks\n   * together. You can do this by specifying whether to commit a block from the committed block list\n   * or from the uncommitted block list, or to commit the most recently uploaded version of the\n   * block, whichever list it may belong to.\n   * @param blocks\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobCommitBlockListResponse>\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams): Promise<Models.BlockBlobCommitBlockListResponse>;\n  /**\n   * @param blocks\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blocks\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options: Models.BlockBlobCommitBlockListOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blocks,\n        options\n      },\n      commitBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobCommitBlockListResponse>;\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a\n   * block blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobGetBlockListResponse>\n   */\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams): Promise<Models.BlockBlobGetBlockListResponse>;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, callback: coreHttp.ServiceCallback<Models.BlockList>): void;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, options: Models.BlockBlobGetBlockListOptionalParams, callback: coreHttp.ServiceCallback<Models.BlockList>): void;\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams | coreHttp.ServiceCallback<Models.BlockList>, callback?: coreHttp.ServiceCallback<Models.BlockList>): Promise<Models.BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listType,\n        options\n      },\n      getBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobGetBlockListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst uploadOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType2,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeout,\n    Parameters.comp14\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeout,\n    Parameters.comp14\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.sourceUrl,\n    Parameters.sourceRange,\n    Parameters.sourceContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst commitBlockListOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"blocks\",\n    mapper: {\n      ...Mappers.BlockLookupList,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getBlockListOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.listType,\n    Parameters.timeout,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nexport * from \"./service\";\nexport * from \"./container\";\nexport * from \"./blob\";\nexport * from \"./pageBlob\";\nexport * from \"./appendBlob\";\nexport * from \"./blockBlob\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.0.0-preview.1\";\nexport const SERVICE_VERSION: string = \"2018-03-28\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 100 * 1024 * 1024; // 100MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HTTPURLConnection = {\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"content-encoding\",\n  CONTENT_LANGUAGE: \"content-language\",\n  CONTENT_LENGTH: \"content-length\",\n  CONTENT_MD5: \"content-md5\",\n  CONTENT_TYPE: \"content-type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\"\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { HeaderConstants, URLConstants } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constrcutor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @export\n * @param {string} connectionString Connection string.\n * @returns {{ [key: string]: any }} String key value pairs of the storage account's base url for Blob, account name, and account key.\n */\nexport function extractConnectionStringParts(connectionString: string): { [key: string]: any } {\n  const matchCredentials = connectionString.match(\n    \"DefaultEndpointsProtocol=(.*);AccountName=(.*);AccountKey=(.*);EndpointSuffix=(.*)\"\n  );\n\n  let defaultEndpointsProtocol;\n  let accountName;\n  let accountKey;\n  let endpointSuffix;\n\n  try {\n    defaultEndpointsProtocol = matchCredentials![1] || \"\";\n    accountName = matchCredentials![2] || \"\";\n    accountKey = Buffer.from(matchCredentials![3], \"base64\");\n    endpointSuffix = matchCredentials![4] || \"\";\n  } catch (err) {\n    throw new Error(\"Invalid Connection String\");\n  }\n\n  const protocol = defaultEndpointsProtocol.toLowerCase();\n  if (protocol !== \"https\" && protocol !== \"http\") {\n    throw new Error(\n      \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n    );\n  } else if (!accountName) {\n    throw new Error(\"Invalid AccountName in the provided Connection String\");\n  } else if (accountKey.length === 0) {\n    throw new Error(\"Invalid AccountKey in the provided Connection String\");\n  } else if (!endpointSuffix) {\n    throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n  }\n\n  const url = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n\n  return {\n    url: url,\n    accountName: accountName,\n    accountKey: accountKey\n  };\n}\n/**\n * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n * If Promise is rejected, the reason will be set to the first error raised by either the\n * ReadableStream or the fs.WriteStream.\n *\n * @export\n * @param {NodeJS.ReadableStream} rs The read stream.\n * @param {string} file Destination file path.\n * @returns {Promise<void>}\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    // Set STREAM_DEBUG env var to log stream events while running tests\n    if (process.env.STREAM_DEBUG) {\n      rs.on(\"close\", () => console.log(\"rs.close\"));\n      rs.on(\"data\", () => console.log(\"rs.data\"));\n      rs.on(\"end\", () => console.log(\"rs.end\"));\n      rs.on(\"error\", () => console.log(\"rs.error\"));\n\n      ws.on(\"close\", () => console.log(\"ws.close\"));\n      ws.on(\"drain\", () => console.log(\"ws.drain\"));\n      ws.on(\"error\", () => console.log(\"ws.error\"));\n      ws.on(\"finish\", () => console.log(\"ws.finish\"));\n      ws.on(\"pipe\", () => console.log(\"ws.pipe\"));\n      ws.on(\"unpipe\", () => console.log(\"ws.unpipe\"));\n    }\n\n    let error: Error;\n\n    rs.on(\"error\", (err: Error) => {\n      // First error wins\n      if (!error) {\n        error = err;\n      }\n\n      // When rs.error is raised, rs.end will never be raised automatically, so it must be raised manually\n      // to ensure ws.close is eventually raised.\n      rs.emit(\"end\");\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      // First error wins\n      if (!error) {\n        error = err;\n      }\n    });\n\n    ws.on(\"close\", () => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n\n    rs.pipe(ws);\n  });\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * BrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * BrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class BrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class BrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of BrowserPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof BrowserPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof BrowserPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { BrowserPolicy } from \"./policies/BrowserPolicy\";\n\n/**\n * BrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n *\n * @export\n * @class BrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class BrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a BrowserPolicyFactory object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {BrowserPolicy}\n   * @memberof BrowserPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): BrowserPolicy {\n    return new BrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { RequestLogOptions } from \"../LoggingPolicyFactory\";\nimport { HTTPURLConnection } from \"../utils/constants\";\nimport { sanitizeHeaders, sanitizeURL } from \"../utils/utils.common\";\n\n// Default values of RetryOptions\nconst DEFAULT_REQUEST_LOG_OPTIONS: RequestLogOptions = {\n  logWarningIfTryOverThreshold: 3000\n};\n\n/**\n * LoggingPolicy is a policy used to log requests.\n *\n * @class LoggingPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class LoggingPolicy extends BaseRequestPolicy {\n  private tryCount: number = 0;\n  private operationStartTime: Date = new Date();\n  private requestStartTime: Date = new Date();\n\n  private readonly loggingOptions: RequestLogOptions;\n\n  /**\n   * Creates an instance of LoggingPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {RequestLogOptions} [loggingOptions=DEFAULT_REQUEST_LOG_OPTIONS]\n   * @memberof LoggingPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    loggingOptions: RequestLogOptions = DEFAULT_REQUEST_LOG_OPTIONS\n  ) {\n    super(nextPolicy, options);\n    this.loggingOptions = loggingOptions;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof LoggingPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    this.tryCount++;\n    this.requestStartTime = new Date();\n    if (this.tryCount === 1) {\n      this.operationStartTime = this.requestStartTime;\n    }\n\n    this.log(HttpPipelineLogLevel.INFO, `==> OUTGOING REQUEST (Try number=${this.tryCount}):`);\n    this.log(HttpPipelineLogLevel.INFO, `  ${request.method}: ${sanitizeURL(request.url)}`);\n\n    try {\n      const response = await this._nextPolicy.sendRequest(request);\n\n      const requestEndTime = new Date();\n      const requestCompletionTime = requestEndTime.getTime() - this.requestStartTime.getTime();\n      const operationDuration = requestEndTime.getTime() - this.operationStartTime.getTime();\n\n      let currentLevel: HttpPipelineLogLevel = HttpPipelineLogLevel.INFO;\n      let logMessage: string = \"\";\n      if (this.shouldLog(HttpPipelineLogLevel.INFO)) {\n        // Assume success and default to informational logging.\n        logMessage = \"Successfully Received Response. \";\n      }\n\n      // If the response took too long, we'll upgrade to warning.\n      if (requestCompletionTime >= this.loggingOptions.logWarningIfTryOverThreshold) {\n        // Log a warning if the try duration exceeded the specified threshold.\n        if (this.shouldLog(HttpPipelineLogLevel.WARNING)) {\n          currentLevel = HttpPipelineLogLevel.WARNING;\n          logMessage = `SLOW OPERATION. Duration > ${this.loggingOptions.logWarningIfTryOverThreshold} ms. `;\n        }\n      }\n\n      if (\n        (response.status >= 400 &&\n          response.status <= 499 &&\n          (response.status !== HTTPURLConnection.HTTP_NOT_FOUND &&\n            response.status !== HTTPURLConnection.HTTP_CONFLICT &&\n            response.status !== HTTPURLConnection.HTTP_PRECON_FAILED &&\n            response.status !== HTTPURLConnection.HTTP_RANGE_NOT_SATISFIABLE)) ||\n        (response.status >= 500 && response.status <= 509)\n      ) {\n        const errorString = `REQUEST ERROR: HTTP request failed with status code: ${response.status}. `;\n        logMessage = errorString;\n\n        currentLevel = HttpPipelineLogLevel.ERROR;\n      }\n\n      const messageInfo = `Request try:${this.tryCount}, status:${response.status} request duration:${requestCompletionTime} ms, operation duration:${operationDuration} ms\\n`;\n      this.log(currentLevel, logMessage + messageInfo);\n      this.log(\n        HttpPipelineLogLevel.INFO,\n        `  request headers: ${JSON.stringify(sanitizeHeaders(response.request.headers), null, 2)}`\n      );\n      this.log(\n        HttpPipelineLogLevel.INFO,\n        `  response headers: ${JSON.stringify(sanitizeHeaders(response.headers), null, 2)}`\n      );\n\n      return response;\n    } catch (err) {\n      if (err instanceof RestError && err.request) {\n        this.log(\n          HttpPipelineLogLevel.INFO,\n          `  request headers: ${JSON.stringify(sanitizeHeaders(err.request.headers), null, 2)}`\n        );\n      }\n      this.log(\n        HttpPipelineLogLevel.ERROR,\n        `Unexpected failure attempting to make request. Error message: ${err.message}`\n      );\n      throw err;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { LoggingPolicy } from \"./policies/LoggingPolicy\";\n\n/**\n * RequestLogOptions configures the retry policy's behavior.\n *\n * @export\n * @interface RequestLogOptions\n */\nexport interface RequestLogOptions {\n  /**\n   * LogWarningIfTryOverThreshold logs a warning if a tried operation takes longer than the specified\n   * duration in ms. Default is 3000ms.\n   * @type {number}\n   * @memberof RequestLogOptions\n   */\n  logWarningIfTryOverThreshold: number;\n}\n\n/**\n * LoggingPolicyFactory is a factory class helping generating LoggingPolicy objects.\n *\n * @export\n * @class LoggingPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class LoggingPolicyFactory implements RequestPolicyFactory {\n  private readonly loggingOptions?: RequestLogOptions;\n\n  constructor(loggingOptions?: RequestLogOptions) {\n    this.loggingOptions = loggingOptions;\n  }\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): LoggingPolicy {\n    return new LoggingPolicy(nextPolicy, options, this.loggingOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  delay,\n  HttpOperationResponse,\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { RetryOptions } from \"../RetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { setURLHost, setURLParameter } from \"../utils/utils.common\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {RetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions?: RetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): RetryPolicy => {\n      return new RetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport enum RetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of RetryOptions\nconst DEFAULT_RETRY_OPTIONS: RetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: RetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class RetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   *\n   * @private\n   * @type {RetryOptions}\n   * @memberof RetryPolicy\n   */\n  private readonly retryOptions: RetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {RetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n   * @memberof RetryPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: RetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof RetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @param {HttpOperationResponse} response\n   * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof RetryPolicy\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      this.logf(\n        HttpPipelineLogLevel.INFO,\n        `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`\n      );\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      this.logf(\n        HttpPipelineLogLevel.ERROR,\n        `RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`\n      );\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt);\n    return await this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @protected\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {HttpOperationResponse} [response]\n   * @param {RestError} [err]\n   * @returns {boolean}\n   * @memberof RetryPolicy\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      this.logf(\n        HttpPipelineLogLevel.INFO,\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toUpperCase().includes(retriableError))\n        ) {\n          this.logf(\n            HttpPipelineLogLevel.INFO,\n            `RetryPolicy: Network error ${retriableError} found, will retry.`\n          );\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        this.logf(HttpPipelineLogLevel.INFO, `RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        this.logf(\n          HttpPipelineLogLevel.INFO,\n          `RetryPolicy: Will retry for status code ${statusCode}.`\n        );\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * This is to log for debugging purposes only.\n   * Comment/uncomment as necessary for releasing/debugging.\n   *\n   * @private\n   * @param {HttpPipelineLogLevel} level\n   * @param {string} message\n   * @memberof RetryPolicy\n   */\n  // tslint:disable-next-line:variable-name\n  private logf(_level: HttpPipelineLogLevel, _message: string) {\n    // this.log(_level, _message);\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @private\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @returns\n   * @memberof RetryPolicy\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case RetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case RetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    this.logf(HttpPipelineLogLevel.INFO, `RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { RetryPolicy, RetryPolicyType } from \"./policies/RetryPolicy\";\n\n/**\n * Retry options interface.\n *\n * @export\n * @interface RetryOptions\n */\nexport interface RetryOptions {\n  /**\n   * Optional. RetryPolicyType, default is exponential retry policy.\n   *\n   * @type {RetryPolicyType}\n   * @memberof RetryOptions\n   */\n  readonly retryPolicyType?: RetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof RetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   *\n   * @type {number}\n   * @memberof RetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof RetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof RetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   *\n   * @type {string}\n   * @memberof RetryOptions\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * RetryPolicyFactory is a factory class helping generating RetryPolicy objects.\n *\n * @export\n * @class RetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class RetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: RetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicyFactory.\n   * @param {RetryOptions} [retryOptions]\n   * @memberof RetryPolicyFactory\n   */\n  constructor(retryOptions?: RetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): RetryPolicy {\n    return new RetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   *\n   * @type {string}\n   * @memberof TelemetryPolicy\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {TelemetryOptions} [telemetry]\n   * @memberof TelemetryPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof TelemetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * Interface of TelemetryPolicy options.\n *\n * @export\n * @interface TelemetryOptions\n */\nexport interface TelemetryOptions {\n  /**\n   * Configues the costom string that is pre-pended to the user agent string.\n   *\n   * @type {string}\n   * @memberof TelemetryOptions\n   */\n  value: string;\n}\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating TelemetryPolicy objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  private telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param {TelemetryOptions} [telemetry]\n   * @memberof TelemetryPolicyFactory\n   */\n  constructor(telemetry?: TelemetryOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.value.replace(\" \", \"\");\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storageblob/10.0.0\n      const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {TelemetryPolicy}\n   * @memberof TelemetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  generateUuid,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * UniqueRequestIDPolicy generates an UUID as x-ms-request-id header value.\n *\n * @class UniqueRequestIDPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class UniqueRequestIDPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of UniqueRequestIDPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof UniqueRequestIDPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof UniqueRequestIDPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(HeaderConstants.X_MS_CLIENT_REQUEST_ID)) {\n      request.headers.set(HeaderConstants.X_MS_CLIENT_REQUEST_ID, generateUuid());\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { UniqueRequestIDPolicy } from \"./policies/UniqueRequestIDPolicy\";\n\n/**\n * UniqueRequestIDPolicyFactory is a factory class helping generating UniqueRequestIDPolicy objects.\n *\n * @export\n * @class UniqueRequestIDPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class UniqueRequestIDPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a UniqueRequestIDPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {UniqueRequestIDPolicy}\n   * @memberof UniqueRequestIDPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): UniqueRequestIDPolicy {\n    return new UniqueRequestIDPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpPipelineLogger as IHttpPipelineLogger,\n  HttpPipelineLogLevel,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  getDefaultProxySettings,\n  isNode,\n  TokenCredential,\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy\n} from \"@azure/core-http\";\n\nimport { BrowserPolicyFactory } from \"./BrowserPolicyFactory\";\nimport { Credential } from \"./credentials/Credential\";\nimport { LoggingPolicyFactory } from \"./LoggingPolicyFactory\";\nimport { RetryOptions, RetryPolicyFactory } from \"./RetryPolicyFactory\";\nimport { TelemetryOptions, TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { UniqueRequestIDPolicyFactory } from \"./UniqueRequestIDPolicyFactory\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  IHttpClient,\n  IHttpPipelineLogger,\n  HttpHeaders,\n  HttpPipelineLogLevel,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Interface of proxy policy options.\n *\n * @example\n * // Use SharedKeyCredential with storage account and account key\n * // SharedKeyCredential is only avaiable in Node.js runtime, not in browsers\n * const sharedKeyCredential = new SharedKeyCredential(account, accountKey);\n * const blobServiceClient = new BlobServiceClient(\n *  `https://${account}.blob.core.windows.net`,\n *  sharedKeyCredential,\n *  {\n *    proxy: { url: \"http://localhost:3128\" }\n *  });\n *\n * @export\n * @interface ProxyOptions\n */\n\nexport interface ProxyOptions {\n  url?: string;\n}\n/**\n * Option interface for Pipeline constructor.\n *\n * @export\n * @interface PipelineOptions\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP pipeline logger.\n   *\n   * @type {IHttpPipelineLogger}\n   * @memberof PipelineOptions\n   */\n  logger?: IHttpPipelineLogger;\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof PipelineOptions\n   */\n  HTTPClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling newPipeline().\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n * Refer to newPipeline() and provided policies as reference before\n * implementing your customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nexport class Pipeline {\n  /**\n   * A list of chained request policy factories.\n   *\n   * @type {RequestPolicyFactory[]}\n   * @memberof Pipeline\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   *\n   * @type {PipelineOptions}\n   * @memberof Pipeline\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param {RequestPolicyFactory[]} factories\n   * @param {PipelineOptions} [options={}]\n   * @memberof Pipeline\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which required by\n   * ServiceClient constructor.\n   *\n   * @returns {ServiceClientOptions} The ServiceClientOptions object from this Pipeline.\n   * @memberof Pipeline\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.HTTPClient,\n      httpPipelineLogger: this.options.logger,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n\n/**\n * Option interface for newPipeline() method.\n *\n * @export\n * @interface NewPipelineOptions\n */\nexport interface NewPipelineOptions {\n  proxy?: ProxyOptions;\n  /**\n   * Telemetry configures the built-in telemetry policy behavior.\n   *\n   * @type {TelemetryOptions}\n   * @memberof NewPipelineOptions\n   */\n  telemetry?: TelemetryOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   *\n   * @type {RetryOptions}\n   * @memberof NewPipelineOptions\n   */\n  retryOptions?: RetryOptions;\n\n  /**\n   * Configures the HTTP pipeline logger.\n   *\n   * @type {IHttpPipelineLogger}\n   * @memberof NewPipelineOptions\n   */\n  logger?: IHttpPipelineLogger;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof NewPipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @export\n * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n *                                                  or a TokenCredential from @azure/identity.\n * @param {NewPipelineOptions} [pipelineOptions] Optional. Options.\n * @returns {Pipeline} A new Pipeline object.\n */\nexport function newPipeline(\n  credential: Credential | TokenCredential,\n  pipelineOptions: NewPipelineOptions = {}\n): Pipeline {\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n  const factories: RequestPolicyFactory[] = [\n    new TelemetryPolicyFactory(pipelineOptions.telemetry),\n    new UniqueRequestIDPolicyFactory(),\n    new BrowserPolicyFactory(),\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    new RetryPolicyFactory(pipelineOptions.retryOptions),\n    new LoggingPolicyFactory()\n  ];\n\n  if (isNode) {\n    // ProxyPolicy is only avaiable in Node.js runtime, not in browsers\n    factories.push(\n      proxyPolicy(\n        getDefaultProxySettings(pipelineOptions.proxy ? pipelineOptions.proxy.url : undefined)\n      )\n    );\n  }\n  factories.push(\n    isTokenCredential(credential)\n      ? bearerTokenAuthenticationPolicy(credential, \"https://storage.azure.com/.default\")\n      : credential\n  );\n\n  return new Pipeline(factories, {\n    HTTPClient: pipelineOptions.httpClient,\n    logger: pipelineOptions.logger\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"1.0.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the targe of the desired\n   * operation.\n   * @param [options] The parameter options\n   */\n  constructor(url: string, options?: coreHttp.ServiceClientOptions) {\n    if (url == undefined) {\n      throw new Error(\"'url' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.version = '2018-03-28';\n    this.baseUri = \"{url}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.url = url;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { StorageClientContext } from \"./generated/lib/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { escapeURLPath } from \"./utils/utils.common\";\n\n/**\n * A StorageClient represents a based URL class for BlobServiceClient, ContainerClient and etc.\n *\n * @export\n * @class StorageClient\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  public readonly url: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   * @ignore\n   * @type {Pipeline}\n   * @memberof StorageClient\n   */\n  protected readonly pipeline: Pipeline;\n\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   *\n   * @protected\n   * @type {StorageClientContext}\n   * @memberof StorageClient\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param {string} url url to resource\n   * @param {Pipeline} pipeline request policy pipeline.\n   * @memberof StorageClient\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      this.url,\n      pipeline.toServiceClientOptions()\n    );\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RestError, TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\n\nimport { Aborter } from \"../Aborter\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof RetriableReadableStreamOptions\n   */\n  abortSignal?: Aborter;\n\n  /**\n   * Max retry count (>=0), undefined or invalid value means no retry\n   *\n   * @type {number}\n   * @memberof RetriableReadableStreamOptions\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   *\n   * @memberof RetriableReadableStreamOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   *\n   * @type {boolean}\n   * @memberof RetriableReadableStreamOptions\n   */\n  doInjectErrorOnce?: boolean;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n *\n * @class RetriableReadableStream\n * @extends {Readable}\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: Aborter;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private progress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param {NodeJS.ReadableStream} source The current ReadableStream returned from getter\n   * @param {ReadableStreamGetter} getter A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param {number} offset Offset position in original data source to read\n   * @param {number} count How much data in original data source to read\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof RetriableReadableStream\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super();\n    this.aborter = options.abortSignal || Aborter.none;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.progress = options.progress;\n    this.options = options;\n\n    this.aborter.addEventListener(\"abort\", () => {\n      this.source.pause();\n      this.emit(\"error\", new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR));\n    });\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read() {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.progress) {\n        this.progress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              // tslint:disable-next-line:max-line-length\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this\n                .offset - 1}, data needed offset: ${this.end}, retries: ${\n                this.retries\n              }, max retries: ${this.maxRetryRequests}`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\n\nimport * as Models from \"./generated/lib/models\";\nimport { Metadata } from \"./models\";\nimport { RetriableReadableStreamOptions } from \"./utils/RetriableReadableStream\";\nimport { ReadableStreamGetter, RetriableReadableStream } from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements Models.BlobDownloadResponse interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The readableStreamBody stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n *\n * @export\n * @class BlobDownloadResponse\n * @implements {Models.BlobDownloadResponse}\n */\nexport class BlobDownloadResponse implements Models.BlobDownloadResponse {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   * @type {(Models.BlobType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobType(): Models.BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyCompletionTime(): Date | undefined {\n    return this.originalResponse.copyCompletionTime;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   * @type {(Models.CopyStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatus(): Models.CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   * @type {(Models.LeaseDurationType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseDuration(): Models.LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   * @type {(Models.LeaseStateType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseState(): Models.LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   * @type {(Models.LeaseStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseStatus(): Models.LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get eTag(): string | undefined {\n    return this.originalResponse.eTag;\n  }\n\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   * @type {(boolean | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   * @type {(Metadata | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   * @type {(Promise<Blob> | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   * @type {(NodeJS.ReadableStream | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  public get _response(): HttpResponse & {\n    parsedHeaders: Models.BlobDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: Models.BlobDownloadResponse;\n  private blobDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of BlobDownloadResponse.\n   *\n   * @param {Models.BlobDownloadResponse} originalResponse\n   * @param {ReadableStreamGetter} getter\n   * @param {number} offset\n   * @param {number} count\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof BlobDownloadResponse\n   */\n  public constructor(\n    originalResponse: Models.BlobDownloadResponse,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// tslint:disable:max-line-length\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n *\n * @export\n * @interface Range\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {Range} iRange\n * @returns {string}\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof CredentialPolicy\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in sendRequest().\n   *\n   * @protected\n   * @abstract\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof CredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { SharedKeyCredential } from \"../credentials/SharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * SharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class SharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class SharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to SharedKeyCredential which generates SharedKeyCredentialPolicy\n   *\n   * @type {SharedKeyCredential}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private readonly factory: SharedKeyCredential;\n\n  /**\n   * Creates an instance of SharedKeyCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {SharedKeyCredential} factory\n   * @memberof SharedKeyCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: SharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // Workaround for https://github.com/axios/axios/issues/2107\n    // We should always keep the 'content-length' header once the issue is solved\n    // For a better explanation about this workaround, look here: https://github.com/Azure/azure-sdk-for-js/pull/3273\n    if (typeof request.body !== \"function\" && !(request.body && request.onUploadProgress)) {\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n    }\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @private\n   * @param {WebResource} request\n   * @param {string} headerName\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort(\n      (a, b): number => {\n        return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n      }\n    );\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (queries.hasOwnProperty(key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as Crypto from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { SharedKeyCredentialPolicy } from \"../policies/SharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * SharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class SharedKeyCredential\n * @extends {Credential}\n */\nexport class SharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof SharedKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   *\n   * @type {Buffer}\n   * @memberof SharedKeyCredential\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of SharedKeyCredential.\n   * @param {string} accountName\n   * @param {string} accountKey\n   * @memberof SharedKeyCredential\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a SharedKeyCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {SharedKeyCredentialPolicy}\n   * @memberof SharedKeyCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): SharedKeyCredentialPolicy {\n    return new SharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof SharedKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return Crypto.createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n *\n * @export\n * @class AnonymousCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof AnonymousCredentialPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an AnonymousCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {AnonymousCredentialPolicy}\n   * @memberof AnonymousCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nenum BatchStates {\n  Good,\n  Error\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   *\n   * @type {number}\n   * @memberof Batch\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   *\n   * @private\n   * @type {Operation[]}\n   * @memberof Batch\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   *\n   * @private\n   * @type {BatchStates}\n   * @memberof Batch\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof Batch\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param {number} [concurrency=5]\n   * @memberof Batch\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param {Operation} operation\n   * @memberof Batch\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   * @returns {Promise<void>}\n   * @memberof Batch\n   */\n  public async do(): Promise<void> {\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   * @private\n   * @returns {(Operation | null)}\n   * @memberof Batch\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   * @private\n   * @returns {void}\n   * @memberof Batch\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {number} offset From which position in the buffer to be filled, inclusive\n * @param {number} end To which position in the buffer to be filled, exclusive\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<void>}\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: string\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\n\nclass StorageClient extends StorageClientContext {\n  // Operation groups\n  service: operations.Service;\n  container: operations.Container;\n  blob: operations.Blob;\n  pageBlob: operations.PageBlob;\n  appendBlob: operations.AppendBlob;\n  blockBlob: operations.BlockBlob;\n\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the targe of the desired\n   * operation.\n   * @param [options] The parameter options\n   */\n  constructor(url: string, options?: coreHttp.ServiceClientOptions) {\n    super(url, options);\n    this.service = new operations.Service(this);\n    this.container = new operations.Container(this);\n    this.blob = new operations.Blob(this);\n    this.pageBlob = new operations.PageBlob(this);\n    this.appendBlob = new operations.AppendBlob(this);\n    this.blockBlob = new operations.BlockBlob(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  StorageClient,\n  StorageClientContext,\n  Models as StorageModels,\n  Mappers as StorageMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpResponse, generateUuid } from \"@azure/core-http\";\nimport * as Models from \"../src/generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { ContainerClient } from \"./ContainerClient\";\nimport { Blob, Container } from \"./generated/lib/operations\";\nimport { StorageClientContext } from \"./generated/lib/storageClient\";\nimport { BlobClient } from \"./internal\";\n\nexport interface Lease {\n  /**\n   * @member {string} [eTag] The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * @member {Date} [lastModified] Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * @member {string} [leaseId] Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * @member {number} [leaseTime] Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * @member {string} [requestId] This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * @member {string} [version] Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * @member {Date} [date] UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * @member {string} [errorCode]\n   */\n  errorCode?: string;\n}\n\nexport type LeaseOperationResponse = Lease & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Lease;\n  };\n};\n\n/**\n * Configures lease operations.\n *\n * @export\n * @interface LeaseOperationOptions\n */\nexport interface LeaseOperationOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof LeaseOperationOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when changing the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof LeaseOperationOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a ContainerClient or a BlobClient.\n *\n * @export\n * @class LeaseClient\n */\nexport class LeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | Blob;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   * @memberof LeaseClient\n   */\n  public get leaseId() {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   * @memberof LeaseClient\n   */\n  public get url() {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of LeaseClient.\n   * @param {(ContainerClient | BlobClient)} client The client to make the lease operation requests.\n   * @param {string} leaseId Initial proposed lease id.\n   * @memberof LeaseClient\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(\n      client.url,\n      (client as any).pipeline.toServiceClientOptions()\n    );\n    this._url = client.url;\n\n    if (client instanceof ContainerClient) {\n      this._containerOrBlobOperation = new Container(clientContext);\n    } else {\n      this._containerOrBlobOperation = new Blob(clientContext);\n    }\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for acquire lease operation.\n   * @memberof LeaseClient\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return await this._containerOrBlobOperation.acquireLease({\n      abortSignal: aborter,\n      duration,\n      modifiedAccessConditions: options.modifiedAccessConditions,\n      proposedLeaseId: this._leaseId\n    });\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {string} proposedLeaseId the proposed new lease Id.\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for change lease operation.\n   * @memberof LeaseClient\n   */\n  public async chanageLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    const response = await this._containerOrBlobOperation.changeLease(\n      this._leaseId,\n      proposedLeaseId,\n      {\n        abortSignal: aborter,\n        modifiedAccessConditions: options.modifiedAccessConditions\n      }\n    );\n    this._leaseId = proposedLeaseId;\n    return response;\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for release lease operation.\n   * @memberof LeaseClient\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {LeaseOperationOptions} [options={}] Optional option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for renew lease operation.\n   * @memberof LeaseClient\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    const aborter = options.abortSignal || Aborter.none;\n    return await this._containerOrBlobOperation.renewLease(this._leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @static\n   * @param {(ContainerClient | BlobClient)} client\n   * @param {number} breakPeriod Break period\n   * @param {LeaseOperationOptions} [options={}] Optional options to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for break lease operation.\n   * @memberof LeaseClient\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    const operationOptions = {\n      abortSignal: aborter,\n      breakPeriod,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    };\n    return await this._containerOrBlobOperation.breakLease(operationOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  TransferProgressEvent,\n  TokenCredential,\n  isTokenCredential\n} from \"@azure/core-http\";\n\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { Blob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./Range\";\nimport { BlobAccessConditions, Metadata } from \"./models\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  URLConstants,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES\n} from \"./utils/constants\";\nimport {\n  setURLParameter,\n  extractConnectionStringParts,\n  readStreamToLocalFile\n} from \"./utils/utils.common\";\nimport { AppendBlobClient, StorageClient } from \"./internal\";\nimport { BlockBlobClient } from \"./internal\";\nimport { PageBlobClient } from \"./internal\";\nimport { Credential } from \"./credentials/Credential\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { Batch } from \"./utils/Batch\";\nimport { streamToBuffer } from \"./utils/utils.node\";\nimport { LeaseClient } from \"./LeaseClient\";\n\n/**\n * Options to configure Blob - Download operation.\n *\n * @export\n * @interface BlobDownloadOptions\n */\nexport interface BlobDownloadOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobDownloadOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Optional. The version string of the snapshot to download.\n   *\n   * @type {string}\n   * @memberof BlobDownloadOptions\n   */\n  snapshot?: string;\n  /**\n   * Specifies whether to retrieve the MD5 hash of the range when downloading a range of bytes.\n   *\n   * @type {boolean}\n   * @memberof BlobDownloadOptions\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobDownloadOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   *\n   * @memberof BlobDownloadOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   *\n   * @type {number}\n   * @memberof BlobDownloadOptions\n   */\n  maxRetryRequests?: number;\n}\n\n/**\n * Options to configure Blob - Get Properties operation.\n *\n * @export\n * @interface BlobGetPropertiesOptions\n */\nexport interface BlobGetPropertiesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobGetPropertiesOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when getting blob properties.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobGetPropertiesOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure the Blob - Delete operation.\n *\n * @export\n * @interface BlobDeleteOptions\n */\nexport interface BlobDeleteOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobDeleteOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when deleting blobs.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobDeleteOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   *\n   * @type {Models.DeleteSnapshotsOptionType}\n   * @memberof BlobDeleteOptions\n   */\n  deleteSnapshots?: Models.DeleteSnapshotsOptionType;\n}\n\n/**\n * Options to confgiure Blob - Undelete operation.\n *\n * @export\n * @interface BlobUndeleteOptions\n */\nexport interface BlobUndeleteOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobUndeleteOptions\n   */\n  abortSignal?: Aborter;\n}\n\n/**\n * Options to configure Blob - Set Http Headers operation.\n *\n * @export\n * @interface BlobSetHTTPHeadersOptions\n */\nexport interface BlobSetHTTPHeadersOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobSetHTTPHeadersOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobSetHTTPHeadersOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Blob - Set Metadata operation.\n *\n * @export\n * @interface BlobSetMetadataOptions\n */\nexport interface BlobSetMetadataOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobSetMetadataOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when setting blob metadata.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobSetMetadataOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n *\n * @export\n * @interface BlobAcquireLeaseOptions\n */\nexport interface BlobAcquireLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobAcquireLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobAcquireLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n *\n * @export\n * @interface BlobReleaseLeaseOptions\n */\nexport interface BlobReleaseLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobReleaseLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobReleaseLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n *\n * @export\n * @interface BlobRenewLeaseOptions\n */\nexport interface BlobRenewLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobRenewLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobRenewLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n *\n * @export\n * @interface BlobChangeLeaseOptions\n */\nexport interface BlobChangeLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobChangeLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobChangeLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n *\n * @export\n * @interface BlobBreakLeaseOptions\n */\nexport interface BlobBreakLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobBreakLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobBreakLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Create Snapshot operation.\n *\n * @export\n * @interface BlobCreateSnapshotOptions\n */\nexport interface BlobCreateSnapshotOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   *\n   * @type {Metadata}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Blob - Start Copy from URL operation.\n *\n * @export\n * @interface BlobStartCopyFromURLOptions\n */\nexport interface BlobStartCopyFromURLOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   *\n   * @type {Metadata}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  sourceModifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Abort Copy from URL operation.\n *\n * @export\n * @interface BlobAbortCopyFromURLOptions\n */\nexport interface BlobAbortCopyFromURLOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobAbortCopyFromURLOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof BlobAbortCopyFromURLOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * Options to configure Blob - Set Tier operation.\n *\n * @export\n * @interface BlobSetTierOptions\n */\nexport interface BlobSetTierOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlobSetTierOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof BlobSetTierOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * Option interface for BlobClient.downloadToBuffer().\n *\n * @export\n * @interface DownloadFromBlobOptions\n */\nexport interface DownloadFromBlobOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof DownloadFromBlobOptions\n   */\n  abortSignal?: Aborter;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be >= 0, if set to 0 or undefined, blockSize will automatically calculated according\n   * to the blob size.\n   *\n   * @type {number}\n   * @memberof DownloadFromBlobOptions\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   *\n   * @type {number}\n   * @memberof DownloadFromAzureFileOptions\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof DownloadFromBlobOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof DownloadFromBlobOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n\n  /**\n   * Concurrency of parallel download.\n   *\n   * @type {number}\n   * @memberof DownloadFromBlobOptions\n   */\n  parallelism?: number;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n *\n * @export\n * @class BlobClient\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * @private\n   * @type {Blobs}\n   * @memberof BlobClient\n   */\n  private blobContext: Blob;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: NewPipelineOptions\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n   *                                                  or a TokenCredential from @azure/identity. If not specified,\n   *                                                  AnonymousCredential is used.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobClient\n   */\n  constructor(url: string, credential?: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?: string | Credential | TokenCredential | Pipeline,\n    blobNameOrOptions?: string | NewPipelineOptions,\n    options?: NewPipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      credentialOrPipelineOrContainerName instanceof Credential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      options = blobNameOrOptions as NewPipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      if (isNode) {\n        const containerName = credentialOrPipelineOrContainerName;\n        const blobName = blobNameOrOptions;\n\n        const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n        const sharedKeyCredential = new SharedKeyCredential(\n          extractedCreds.accountName,\n          extractedCreds.accountKey\n        );\n        urlOrConnectionString = extractedCreds.url + \"/\" + containerName + \"/\" + blobName;\n        pipeline = newPipeline(sharedKeyCredential, options);\n      } else {\n        throw new Error(\"Connection string is only supported in Node.js environment\");\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(urlOrConnectionString, pipeline);\n    this.blobContext = new Blob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {BlobClient} A new BlobClient object identical to the source but with the specified snapshot timestamp\n   * @memberof BlobClient\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   * @returns {AppendBlobClient}\n   * @memberof BlobClient\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   * @returns {BlockBlobClient}\n   * @memberof BlobClient\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   * @returns {PageBlobClient}\n   * @memberof BlobClient\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param {number} [offset] From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {BlobDownloadOptions} [options] Optional options to Blob Download operation.\n   * @returns {Promise<Models.BlobDownloadResponse>}\n   * @memberof BlobClient\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {}\n  ): Promise<Models.BlobDownloadResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    options.blobAccessConditions.modifiedAccessConditions =\n      options.blobAccessConditions.modifiedAccessConditions || {};\n\n    const res = await this.blobContext.download({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n      onDownloadProgress: isNode ? undefined : options.progress,\n      range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n      rangeGetContentMD5: options.rangeGetContentMD5,\n      snapshot: options.snapshot\n    });\n\n    // Return browser response immediately\n    if (!isNode) {\n      return res;\n    }\n\n    // We support retrying when download stream unexpected ends in Node.js runtime\n    // Following code shouldn't be bundled into browser build, however some\n    // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n    // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n    // The config is in package.json \"browser\" field\n    if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n      // TODO: Default value or make it a required parameter?\n      options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n    }\n\n    if (res.contentLength === undefined) {\n      throw new RangeError(`File download response doesn't contain valid content length header`);\n    }\n\n    if (!res.eTag) {\n      throw new RangeError(`File download response doesn't contain valid etag header`);\n    }\n\n    return new BlobDownloadResponse(\n      res,\n      async (start: number): Promise<NodeJS.ReadableStream> => {\n        const updatedOptions: Models.BlobDownloadOptionalParams = {\n          leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions,\n          modifiedAccessConditions: {\n            ifMatch: options.blobAccessConditions!.modifiedAccessConditions!.ifMatch || res.eTag,\n            ifModifiedSince: options.blobAccessConditions!.modifiedAccessConditions!\n              .ifModifiedSince,\n            ifNoneMatch: options.blobAccessConditions!.modifiedAccessConditions!.ifNoneMatch,\n            ifUnmodifiedSince: options.blobAccessConditions!.modifiedAccessConditions!\n              .ifUnmodifiedSince\n          },\n          range: rangeToString({\n            count: offset + res.contentLength! - start,\n            offset: start\n          }),\n          snapshot: options.snapshot\n        };\n\n        // Debug purpose only\n        // console.log(\n        //   `Read from internal stream, range: ${\n        //     updatedOptions.range\n        //   }, options: ${JSON.stringify(updatedOptions)}`\n        // );\n\n        return (await this.blobContext.download({\n          abortSignal: aborter,\n          ...updatedOptions\n        })).readableStreamBody!;\n      },\n      offset,\n      res.contentLength!,\n      {\n        abortSignal: aborter,\n        maxRetryRequests: options.maxRetryRequests,\n        progress: options.progress\n      }\n    );\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * @param {BlobGetPropertiesOptions} [options] Optional options to Get Properties operation.\n   * @returns {Promise<Models.BlobGetPropertiesResponse>}\n   * @memberof BlobClient\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {}\n  ): Promise<Models.BlobGetPropertiesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.getProperties({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param {BlobDeleteOptions} [options] Optional options to Blob Delete operation.\n   * @returns {Promise<Models.BlobDeleteResponse>}\n   * @memberof BlobClient\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<Models.BlobDeleteResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.deleteMethod({\n      abortSignal: aborter,\n      deleteSnapshots: options.deleteSnapshots,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param {BlobUndeleteOptions} [options] Optional options to Blob Undelete operation.\n   * @returns {Promise<Models.BlobUndeleteResponse>}\n   * @memberof BlobClient\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<Models.BlobUndeleteResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.blobContext.undelete({\n      abortSignal: aborter || Aborter.none\n    });\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specificed blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {Models.BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n   *                                                   the specificed blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   * @param {BlobSetHTTPHeadersOptions} [options] Optional options to Blob Set HTTP Headers operation.\n   * @returns {Promise<Models.BlobSetHTTPHeadersResponse>}\n   * @memberof BlobClient\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: Models.BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {}\n  ): Promise<Models.BlobSetHTTPHeadersResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.setHTTPHeaders({\n      abortSignal: aborter,\n      blobHTTPHeaders,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param {Metadata} [metadata] Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param {BlobSetMetadataOptions} [options] Optional options to Set Metadata operation.\n   * @returns {Promise<Models.BlobSetMetadataResponse>}\n   * @memberof BlobClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {}\n  ): Promise<Models.BlobSetMetadataResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.setMetadata({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Get a LeaseClient that manages leases on the blob.\n   *\n   * @param {string} [proposeLeaseId] Initial proposed lease Id.\n   * @returns {LeaseClient} A new LeaseClient object for managing leases on the blob.\n   * @memberof BlobClient\n   */\n  public getLeaseClient(proposeLeaseId?: string): LeaseClient {\n    return new LeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param {BlobCreateSnapshotOptions} [options] Optional options to the Blob Create Snapshot operation.\n   * @returns {Promise<Models.BlobCreateSnapshotResponse>}\n   * @memberof BlobClient\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {}\n  ): Promise<Models.BlobCreateSnapshotResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.createSnapshot({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param {string} copySource url to the ource Azure Blob/File.\n   * @param {BlobStartCopyFromURLOptions} [options] Optional options to the Blob Start Copy From URL operation.\n   * @returns {Promise<Models.BlobStartCopyFromURLResponse>}\n   * @memberof BlobClient\n   */\n  public async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {}\n  ): Promise<Models.BlobStartCopyFromURLResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n\n    return this.blobContext.startCopyFromURL(copySource, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n      sourceModifiedAccessConditions: {\n        sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n        sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n        sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n        sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n      }\n    });\n  }\n\n  /**\n   * Aborts a pending Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param {string} copyId Id of the Copy From URL operation.\n   * @param {BlobAbortCopyFromURLOptions} [options] Optional options to the Blob Abort Copy From URL operation.\n   * @returns {Promise<Models.BlobAbortCopyFromURLResponse>}\n   * @memberof BlobClient\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {}\n  ): Promise<Models.BlobAbortCopyFromURLResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.blobContext.abortCopyFromURL(copyId, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param {Models.AccessTier} tier The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param {BlobSetTierOptions} [options] Optional options to the Blob Set Tier operation.\n   * @returns {Promise<Models.BlobsSetTierResponse>}\n   * @memberof BlobClient\n   */\n  public async setTier(\n    tier: Models.AccessTier,\n    options: BlobSetTierOptions = {}\n  ): Promise<Models.BlobSetTierResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return await this.blobContext.setTier(tier, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire blob.\n   *\n   * @export\n   * @param {Buffer} buffer Buffer to be fill, must have length larger than count\n   * @param {number} offset From which position of the block blob to download\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined\n   * @param {DownloadFromBlobOptions} [options] DownloadFromBlobOptions\n   * @returns {Promise<void>}\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset: number,\n    count?: number,\n    options: DownloadFromBlobOptions = {}\n  ): Promise<void> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0) {\n      throw new RangeError(\"blockSize option must be >= 0\");\n    }\n    if (options.blockSize === 0) {\n      options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n    }\n\n    if (offset < 0) {\n      throw new RangeError(\"offset option must be >= 0\");\n    }\n\n    if (count && count <= 0) {\n      throw new RangeError(\"count option must be > 0\");\n    }\n\n    if (!options.blobAccessConditions) {\n      options.blobAccessConditions = {};\n    }\n\n    // Customer doesn't specify length, get it\n    if (!count) {\n      const response = await this.getProperties(options);\n      count = response.contentLength! - offset;\n      if (count < 0) {\n        throw new RangeError(\n          `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`\n        );\n      }\n    }\n\n    if (buffer.length < count) {\n      throw new RangeError(\n        `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n      );\n    }\n\n    let transferProgress: number = 0;\n    const batch = new Batch(options.parallelism);\n    for (let off = offset; off < offset + count; off = off + options.blockSize) {\n      batch.addOperation(async () => {\n        const chunkEnd = off + options.blockSize! < count! ? off + options.blockSize! : count!;\n        const response = await this.download(off, chunkEnd - off + 1, {\n          abortSignal: options.abortSignal,\n          blobAccessConditions: options.blobAccessConditions,\n          maxRetryRequests: options.maxRetryRequestsPerBlock\n        });\n        const stream = response.readableStreamBody!;\n        await streamToBuffer(stream, buffer, off - offset, chunkEnd - offset);\n        // Update progress after block is downloaded, in case of block trying\n        // Could provide finer grained progress updating inside HTTP requests,\n        // only if convenience layer download try is enabled\n        transferProgress += chunkEnd - off;\n        if (options.progress) {\n          options.progress({ loadedBytes: transferProgress });\n        }\n      });\n    }\n    await batch.do();\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param {string} filePath\n   * @param {number} [offset] From which position of the block blob to download.\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined.\n   * @param {BlobDownloadOptions} [options] Options to Blob download options.\n   * @returns {Promise<Models.BlobDownloadResponse>} The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   * @memberof BlobClient\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options?: BlobDownloadOptions\n  ): Promise<Models.BlobDownloadResponse> {\n    const response = await this.download(offset, count, options);\n    if (response.readableStreamBody) {\n      await readStreamToLocalFile(response.readableStreamBody, filePath);\n    }\n\n    // The stream is no longer accessible so setting it to undefined.\n    (response as any).blobDownloadStream = undefined;\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  HttpRequestBody,\n  TransferProgressEvent,\n  TokenCredential,\n  isTokenCredential,\n  isNode\n} from \"@azure/core-http\";\n\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { BlobClient } from \"./internal\";\nimport { AppendBlob } from \"./generated/lib/operations\";\nimport { AppendBlobAccessConditions, BlobAccessConditions, Metadata } from \"./models\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport { URLConstants } from \"./utils/constants\";\nimport { setURLParameter, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { Credential } from \"./credentials/Credential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\n\n/**\n * Options to configure Append Blob - Create operation.\n *\n * @export\n * @interface AppendBlobCreateOptions\n */\nexport interface AppendBlobCreateOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: Aborter;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof AppendBlobCreateOptions\n   */\n  accessConditions?: BlobAccessConditions;\n  /**\n   * HTTP headers to set when creating append blobs.\n   *\n   * @type {Models.BlobHTTPHeaders}\n   * @memberof AppendBlobCreateOptions\n   */\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   *\n   * @type {Metadata}\n   * @memberof AppendBlobCreateOptions\n   */\n  metadata?: Metadata;\n}\n\n/**\n * Optiosn to confgiure the Append Blob - Append Block operation.\n *\n * @export\n * @interface AppendBlobAppendBlockOptions\n */\nexport interface AppendBlobAppendBlockOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   *\n   * @type {AppendBlobAccessConditions}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  accessConditions?: AppendBlobAccessConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   *\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n  /**\n   * A Uint8Array holding the MD5 hash of the blob content.\n   * It is only used to verify the integrity of the block during transport.\n   * It is not stored in with the blob.\n   *\n   * @type {Uint8Array}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n *\n * @export\n * @class AppendBlobClient\n * @extends {BlobClient}\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {AppendBlobs}\n   * @memberof AppendBlobClient\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: NewPipelineOptions\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n   *                                                  or a TokenCredential from @azure/identity. If not specified,\n   *                                                  AnonymousCredential is used.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(url: string, credential: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName: string | Credential | TokenCredential | Pipeline,\n    blobNameOrOptions?: string | NewPipelineOptions,\n    options?: NewPipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      credentialOrPipelineOrContainerName instanceof Credential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      options = blobNameOrOptions as NewPipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      if (isNode) {\n        const containerName = credentialOrPipelineOrContainerName;\n        const blobName = blobNameOrOptions;\n\n        const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n        const sharedKeyCredential = new SharedKeyCredential(\n          extractedCreds.accountName,\n          extractedCreds.accountKey\n        );\n        urlOrConnectionString = extractedCreds.url + \"/\" + containerName + \"/\" + blobName;\n        pipeline = newPipeline(sharedKeyCredential, options);\n      } else {\n        throw new Error(\"Connection string is only supported in Node.js environment\");\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(urlOrConnectionString, pipeline);\n    this.appendBlobContext = new AppendBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {AppendBlobClient} A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof AppendBlobClient\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {AppendBlobCreateOptions} [options] Options to the Append Block Create operation.\n   * @returns {Promise<Models.AppendBlobsCreateResponse>}\n   * @memberof AppendBlobClient\n   */\n  public async create(\n    options: AppendBlobCreateOptions = {}\n  ): Promise<Models.AppendBlobCreateResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.appendBlobContext.create(0, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param {HttpRequestBody} body Data to be appended.\n   * @param {number} contentLength Number of bytes to be appended.\n   * @param {AppendBlobAppendBlockOptions} [options] Options to the Append Block operation.\n   * @returns {Promise<Models.AppendBlobsAppendBlockResponse>}\n   * @memberof AppendBlobClient\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {}\n  ): Promise<Models.AppendBlobAppendBlockResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.appendBlobContext.appendBlock(body, contentLength, {\n      abortSignal: aborter,\n      appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS <= maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Parallelism should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n * @export\n * @class BufferScheduler\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   *\n   * @private\n   * @type {Readable}\n   * @memberof BufferScheduler\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   *\n   * @private\n   * @type {OutgoingHandler}\n   * @memberof BufferScheduler\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof BufferScheduler\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 < parallelism <= maxBuffers)\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly parallelism: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   *\n   * @private\n   * @type {string}\n   * @memberof BufferScheduler\n   */\n  private encoding?: string;\n\n  /**\n   * How many buffers have been allocated.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param {Readable} readable A Node.js Readable stream\n   * @param {number} bufferSize Buffer size of every maintained buffer\n   * @param {number} maxBuffers How many buffers can be allocated\n   * @param {OutgoingHandler} outgoingHandler An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param {number} parallelism Concurrency of executing outgoingHandlers (>0)\n   * @param {string} [encoding] [Optional] Encoding of Readable stream when it's a string stream\n   * @memberof BufferScheduler\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    parallelism: number,\n    encoding?: string\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (parallelism <= 0) {\n      throw new RangeError(`parallelism must be larger than 0, current is ${parallelism}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.parallelism = parallelism;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   * @returns {Promise<void>}\n   * @memberof BufferScheduler\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @private\n   * @param {Buffer} data\n   * @memberof BufferScheduler\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   * @private\n   * @returns {Buffer}\n   * @memberof BufferScheduler\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @private\n   * @returns {boolean} Return false when buffers in incoming are not enough, else true.\n   * @memberof BufferScheduler\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * parallelism reaches.\n   *\n   * @private\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.parallelism) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @returns {Promise<any>}\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @memberof BufferScheduler\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\n\nimport {\n  generateUuid,\n  HttpRequestBody,\n  HttpResponse,\n  TransferProgressEvent,\n  TokenCredential,\n  isTokenCredential,\n  isNode\n} from \"@azure/core-http\";\n\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { BlobClient } from \"./internal\";\nimport { BlockBlob } from \"./generated/lib/operations\";\nimport { BlobHTTPHeaders } from \"./generated/lib/models\";\nimport { Range, rangeToString } from \"./Range\";\nimport { BlobAccessConditions, Metadata } from \"./models\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  setURLParameter,\n  extractConnectionStringParts,\n  generateBlockID\n} from \"./utils/utils.common\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { Credential } from \"./credentials/Credential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  URLConstants,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  BLOCK_BLOB_MAX_BLOCKS,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES\n} from \"./utils/constants\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { Readable } from \"stream\";\nimport { Batch } from \"./utils/Batch\";\n\n/**\n * Options to configure Block Blob - Upload operation.\n *\n * @export\n * @interface BlockBlobUploadOptions\n */\nexport interface BlockBlobUploadOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlockBlobUploadOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlockBlobUploadOptions\n   */\n  accessConditions?: BlobAccessConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * @type {Models.BlobHTTPHeaders}\n   * @memberof BlockBlobUploadOptions\n   */\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   *\n   * @type {Metadata}\n   * @memberof BlockBlobUploadOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   *\n   * @memberof BlockBlobUploadOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n}\n\n/**\n * Options to configure Block Blob - Stage Block operation.\n *\n * @export\n * @interface BlockBlobStageBlockOptions\n */\nexport interface BlockBlobStageBlockOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   *\n   * @memberof BlockBlobStageBlockOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n  /**\n   * A Uint8Array holding the MD5 hash of the block content.\n   * It is only used to verify the integrity of the block during transport.\n   * It is not stored in with the blob.\n   *\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n}\n\n/**\n * Options to configure Block Blob - Stage Block from URL operation.\n *\n * @export\n * @interface BlockBlobStageBlockFromURLOptions\n */\nexport interface BlockBlobStageBlockFromURLOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   *\n   * @type {Range}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n  /**\n   * A Uint8Array holding the MD5 hash of the source block content.\n   * It is only used to verify the integrity of the block during transport.\n   * It is not stored in with the blob.\n   *\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  sourceContentMD5?: Uint8Array;\n}\n\n/**\n * Options to configure Block Blob - Commit Block List operation.\n *\n * @export\n * @interface BlockBlobCommitBlockListOptions\n */\nexport interface BlockBlobCommitBlockListOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when committing the block list.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  /**\n   * Conditions to meet when committing block list.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  accessConditions?: BlobAccessConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   *\n   * @type {Models.BlobHTTPHeaders}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   *\n   * @type {Metadata}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  metadata?: Metadata;\n}\n\n/**\n * Options to configure Block Blob - Get Block List operation.\n *\n * @export\n * @interface BlockBlobGetBlockListOptions\n */\nexport interface BlockBlobGetBlockListOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof BlockBlobGetBlockListOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof BlockBlobGetBlockListOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * Option interface for uploadStream().\n *\n * @export\n * @interface UploadStreamToBlockBlobOptions\n */\nexport interface UploadStreamToBlockBlobOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof IUploadToBlockBlobOptions\n   */\n  abortSignal?: Aborter;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof UploadStreamToBlockBlobOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof UploadStreamToBlockBlobOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof UploadStreamToBlockBlobOptions\n   */\n  accessConditions?: BlobAccessConditions;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof UploadStreamToBlockBlobOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n}\n/**\n * Option interface for BlockBlobClient.uploadFile() and BlockBlobClient.uploadSeekableStream().\n *\n * @export\n * @interface UploadToBlockBlobOptions\n */\nexport interface UploadToBlockBlobOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof IUploadToBlockBlobOptions\n   */\n  abortSignal?: Aborter;\n\n  /**\n   * Destination block blob size in bytes.\n   *\n   * @type {number}\n   * @memberof UploadToBlockBlobOptions\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   *\n   * @type {number}\n   * @memberof UploadToBlockBlobOptions\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof UploadToBlockBlobOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * @type {IBlobHTTPHeaders}\n   * @memberof UploadToBlockBlobOptions\n   */\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof UploadToBlockBlobOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof UploadToBlockBlobOptions\n   */\n  blobAccessConditions?: BlobAccessConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be >= 0.\n   *\n   * @type {number}\n   * @memberof UploadToBlockBlobOptions\n   */\n  parallelism?: number;\n}\n\n/**\n * Type for BlockBlobClient.uploadFile(), BlockBlobClient.uploadStream() and BlockBlobClient.uploadBrowserDate().\n *\n * @export\n */\nexport type BlobUploadCommonResponse = Models.BlockBlobUploadHeaders & {\n  /**\n   * The underlying HTTP response.\n   *\n   * @type {HttpResponse}\n   * @memberof IBlobUploadCommonResponse\n   */\n  _response: HttpResponse;\n};\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n *\n * @export\n * @class BlockBlobClient\n * @extends {BlobClient}\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blockBlobContext provided by protocol layer.\n   *\n   * @private\n   * @type {BlockBlobs}\n   * @memberof BlockBlobClient\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: NewPipelineOptions\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential or TokenCredential.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(url: string, credential?: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?: string | Credential | TokenCredential | Pipeline,\n    blobNameOrOptions?: string | NewPipelineOptions,\n    options?: NewPipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      credentialOrPipelineOrContainerName instanceof Credential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      options = blobNameOrOptions as NewPipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      if (isNode) {\n        const containerName = credentialOrPipelineOrContainerName;\n        const blobName = blobNameOrOptions;\n\n        const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n        const sharedKeyCredential = new SharedKeyCredential(\n          extractedCreds.accountName,\n          extractedCreds.accountKey\n        );\n        urlOrConnectionString = extractedCreds.url + \"/\" + containerName + \"/\" + blobName;\n        pipeline = newPipeline(sharedKeyCredential, options);\n      } else {\n        throw new Error(\"Connection string is only supported in Node.js environment\");\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(urlOrConnectionString, pipeline);\n    this.blockBlobContext = new BlockBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {BlockBlobClient} A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof BlockBlobClient\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use stageBlock and commitBlockList.\n   *\n   * This is a non-parallel uploading method, please use uploadFile(),\n   * uploadStream() or uploadBrowserData() for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {BlockBlobUploadOptions} [options] Options to the Block Blob Upload operation.\n   * @returns {Promise<Models.BlockBlobUploadResponse>} Response data for the Block Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {}\n  ): Promise<Models.BlockBlobUploadResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.blockBlobContext.upload(body, contentLength, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress\n    });\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {HttpRequestBody} body Data to upload to the staging area.\n   * @param {number} contentLength Number of bytes to upload.\n   * @param {BlockBlobStageBlockOptions} [options] Options to the Block Blob Stage Block operation.\n   * @returns {Promise<Models.BlockBlobStageBlockResponse>} Response data for the Block Blob Stage Block operation.\n   * @memberof BlockBlobClient\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {}\n  ): Promise<Models.BlockBlobStageBlockResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions,\n      onUploadProgress: options.progress,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {string} sourceURL Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {number} [offset] From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {BlockBlobStageBlockFromURLOptions} [options={}] Options to the Block Blob Stage Block From URL operation.\n   * @returns {Promise<Models.BlockBlobStageBlockFromURLResponse>} Response data for the Block Blob Stage Block From URL operation.\n   * @memberof BlockBlobClient\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {}\n  ): Promise<Models.BlockBlobStageBlockFromURLResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions,\n      sourceContentMD5: options.sourceContentMD5,\n      sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior stageBlock operation. You can call commitBlockList to update a blob\n   * by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n   * @param {BlockBlobCommitBlockListOptions} [options] Options to the Block Blob Commit Block List operation.\n   * @returns {Promise<Models.BlockBlobCommitBlockListResponse>} Response data for the Block Blob Commit Block List operation.\n   * @memberof BlockBlobClient\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {}\n  ): Promise<Models.BlockBlobCommitBlockListResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.blockBlobContext.commitBlockList(\n      { latest: blocks },\n      {\n        abortSignal: aborter,\n        blobHTTPHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n      }\n    );\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param {Models.BlockListType} listType Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param {BlockBlobGetBlockListOptions} [options] Options to the Block Blob Get Block List operation.\n   * @returns {Promise<Models.BlockBlobGetBlockListResponse>} Response data for the Block Blob Get Block List operation.\n   * @memberof BlockBlobClient\n   */\n  public async getBlockList(\n    listType: Models.BlockListType,\n    options: BlockBlobGetBlockListOptions = {}\n  ): Promise<Models.BlockBlobGetBlockListResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    const res = await this.blockBlobContext.getBlockList(listType, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n\n    if (!res.committedBlocks) {\n      res.committedBlocks = [];\n    }\n\n    if (!res.uncommittedBlocks) {\n      res.uncommittedBlocks = [];\n    }\n\n    return res;\n  }\n\n  // High level functions\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @export\n   * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n   * @param {UploadToBlockBlobOptions} [options] Options to upload browser data.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options?: UploadToBlockBlobOptions\n  ): Promise<BlobUploadCommonResponse> {\n    const browserBlob = new Blob([browserData]);\n    return this.UploadSeekableBlob(\n      (offset: number, size: number): Blob => {\n        return browserBlob.slice(offset, offset + size);\n      },\n      browserBlob.size,\n      options\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob object to block blob. Requires a blobFactory as the data source,\n   * which need to return a Blob object with the offset and size provided.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param {(offset: number, size: number) => Blob} blobFactory\n   * @param {number} size size of the data to upload.\n   * @param {UploadToBlockBlobOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   */\n  private async UploadSeekableBlob(\n    blobFactory: (offset: number, size: number) => Blob,\n    size: number,\n    options: UploadToBlockBlobOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n      );\n    }\n\n    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n      options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n    }\n    if (\n      options.maxSingleShotSize < 0 ||\n      options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n    ) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n      );\n    }\n\n    if (options.blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > options.maxSingleShotSize) {\n        options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.blobAccessConditions) {\n      options.blobAccessConditions = {};\n    }\n\n    if (size <= options.maxSingleShotSize) {\n      return this.upload(blobFactory(0, size), size, options);\n    }\n\n    const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n    if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n      throw new RangeError(\n        `The buffer's size is too big or the BlockSize is too small;` +\n          `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n      );\n    }\n\n    const blockList: string[] = [];\n    const blockIDPrefix = generateUuid();\n    let transferProgress: number = 0;\n\n    const batch = new Batch(options.parallelism);\n    for (let i = 0; i < numBlocks; i++) {\n      batch.addOperation(\n        async (): Promise<any> => {\n          const blockID = generateBlockID(blockIDPrefix, i);\n          const start = options.blockSize! * i;\n          const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n          const contentLength = end - start;\n          blockList.push(blockID);\n          await this.stageBlock(blockID, blobFactory(start, contentLength), contentLength, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions\n          });\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          // TODO: Hook with convenience layer progress event in finer level\n          transferProgress += contentLength;\n          if (options.progress) {\n            options.progress!({\n              loadedBytes: transferProgress\n            });\n          }\n        }\n      );\n    }\n    await batch.do();\n\n    return this.commitBlockList(blockList, options);\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param {string} filePath Full path of local file\n   * @param {UploadToBlockBlobOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {(Promise<BlobUploadCommonResponse>)}  Response data for the Blob Upload operation.\n   */\n  public async uploadFile(\n    filePath: string,\n    options?: UploadToBlockBlobOptions\n  ): Promise<BlobUploadCommonResponse> {\n    const size = fs.statSync(filePath).size;\n    return this.uploadResetableStream(\n      (offset, count) =>\n        fs.createReadStream(filePath, {\n          autoClose: true,\n          end: count ? offset + count - 1 : Infinity,\n          start: offset\n        }),\n      size,\n      options\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param {Readable} stream Node.js Readable stream\n   * @param {BlockBlobClient} blockBlobClient A BlockBlobClient instance\n   * @param {number} bufferSize Size of every buffer allocated, also the block size in the uploaded block blob\n   * @param {number} maxBuffers Max buffers will allocate during uploading, positive correlation\n   *                            with max uploading concurrency\n   * @param {UploadStreamToBlockBlobOptions} [options] Options to Upload Stream to Block Blob operation.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    options: UploadStreamToBlockBlobOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.accessConditions) {\n      options.accessConditions = {};\n    }\n\n    let blockNum = 0;\n    const blockIDPrefix = generateUuid();\n    let transferProgress: number = 0;\n    const blockList: string[] = [];\n\n    const scheduler = new BufferScheduler(\n      stream,\n      bufferSize,\n      maxBuffers,\n      async (buffer: Buffer) => {\n        const blockID = generateBlockID(blockIDPrefix, blockNum);\n        blockList.push(blockID);\n        blockNum++;\n\n        await this.stageBlock(blockID, buffer, buffer.length, {\n          leaseAccessConditions: options.accessConditions!.leaseAccessConditions\n        });\n\n        // Update progress after block is successfully uploaded to server, in case of block trying\n        transferProgress += buffer.length;\n        if (options.progress) {\n          options.progress({ loadedBytes: transferProgress });\n        }\n      },\n      // Parallelism should set a smaller value than maxBuffers, which is helpful to\n      // reduce the possibility when a outgoing handler waits for stream data, in\n      // this situation, outgoing handlers are blocked.\n      // Outgoing queue shouldn't be empty.\n      Math.ceil((maxBuffers / 4) * 3)\n    );\n    await scheduler.do();\n\n    return this.commitBlockList(blockList, options);\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Accepts a Node.js Readable stream factory, and uploads in blocks to a block blob.\n   * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n   * is the offset in the block blob to be uploaded.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @export\n   * @param {(offset: number) => NodeJS.ReadableStream} streamFactory Returns a Node.js Readable stream starting\n   *                                                                  from the offset defined\n   * @param {number} size Size of the block blob\n   * @param {UploadToBlockBlobOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {(Promise<BlobUploadCommonResponse>)}  Response data for the Blob Upload operation.\n   */\n  private async uploadResetableStream(\n    streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n    size: number,\n    options: UploadToBlockBlobOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n      );\n    }\n\n    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n      options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n    }\n    if (\n      options.maxSingleShotSize < 0 ||\n      options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n    ) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n      );\n    }\n\n    if (options.blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_BLOCKS * BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > options.maxSingleShotSize) {\n        options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.blobAccessConditions) {\n      options.blobAccessConditions = {};\n    }\n\n    if (size <= options.maxSingleShotSize) {\n      return this.upload(() => streamFactory(0), size, options);\n    }\n\n    const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n    if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n      throw new RangeError(\n        `The buffer's size is too big or the BlockSize is too small;` +\n          `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n      );\n    }\n\n    const blockList: string[] = [];\n    const blockIDPrefix = generateUuid();\n    let transferProgress: number = 0;\n\n    const batch = new Batch(options.parallelism);\n    for (let i = 0; i < numBlocks; i++) {\n      batch.addOperation(\n        async (): Promise<any> => {\n          const blockID = generateBlockID(blockIDPrefix, i);\n          const start = options.blockSize! * i;\n          const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n          const contentLength = end - start;\n          blockList.push(blockID);\n          await this.stageBlock(blockID, () => streamFactory(start, contentLength), contentLength, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions\n          });\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += contentLength;\n          if (options.progress) {\n            options.progress({ loadedBytes: transferProgress });\n          }\n        }\n      );\n    }\n    await batch.do();\n\n    return this.commitBlockList(blockList, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  HttpRequestBody,\n  TransferProgressEvent,\n  TokenCredential,\n  isTokenCredential,\n  isNode\n} from \"@azure/core-http\";\n\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { BlobClient } from \"./internal\";\nimport { PageBlob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./Range\";\nimport { BlobAccessConditions, Metadata, PageBlobAccessConditions } from \"./models\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport { URLConstants } from \"./utils/constants\";\nimport { setURLParameter, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { Credential } from \"./credentials/Credential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\n\n/**\n * Options to configure Page Blob - Create operation.\n *\n * @export\n * @interface PageBlobCreateOptions\n */\nexport interface PageBlobCreateOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobCreateOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when creating a page blob.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof PageBlobCreateOptions\n   */\n  accessConditions?: BlobAccessConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   *\n   * @type {number}\n   * @memberof PageBlobCreateOptions\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   *\n   * @type {Models.BlobHTTPHeaders}\n   * @memberof PageBlobCreateOptions\n   */\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   *\n   * @type {Metadata}\n   * @memberof PageBlobCreateOptions\n   */\n  metadata?: Metadata;\n}\n\n/**\n * Options to configure Page Blob - Upload Pages operation.\n *\n * @export\n * @interface PageBlobUploadPagesOptions\n */\nexport interface PageBlobUploadPagesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when uploading pages.\n   *\n   * @type {PageBlobAccessConditions}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  accessConditions?: PageBlobAccessConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   *\n   * @memberof PageBlobUploadPagesOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n  /**\n   * A Uint8Array holding the MD5 hash of the blob content.\n   * It is only used to verify the integrity of the block during transport.\n   * It is not stored in with the blob.\n   *\n   * @type {Uint8Array}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n}\n\n/**\n * Options to configure Page Blob - Clear Pages operation.\n *\n * @export\n * @interface PageBlobClearPagesOptions\n */\nexport interface PageBlobClearPagesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobClearPagesOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when clearing pages.\n   *\n   * @type {PageBlobAccessConditions}\n   * @memberof PageBlobClearPagesOptions\n   */\n  accessConditions?: PageBlobAccessConditions;\n}\n\n/**\n * Options to configure Page Blob - Get Page Ranges operation.\n *\n * @export\n * @interface PageBlobGetPageRangesOptions\n */\nexport interface PageBlobGetPageRangesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobGetPageRangesOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when getting page ranges.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof PageBlobGetPageRangesOptions\n   */\n  accessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Page Blob - Get Ranges Diff operation.\n *\n * @export\n * @interface PageBlobGetPageRangesDiffOptions\n */\nexport interface PageBlobGetPageRangesDiffOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  accessConditions?: BlobAccessConditions;\n  /**\n   * (unused)\n   *\n   * @type {string}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  range?: string;\n}\n\n/**\n * Options to configure Page Blob - Resize operation.\n *\n * @export\n * @interface PageBlobResizeOptions\n */\nexport interface PageBlobResizeOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobResizeOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when resizing a page blob.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof PageBlobResizeOptions\n   */\n  accessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Page Blob - Update Sequence Number operation.\n *\n * @export\n * @interface PageBlobUpdateSequenceNumberOptions\n */\nexport interface PageBlobUpdateSequenceNumberOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobUpdateSequenceNumberOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when updating sequence number.\n   *\n   * @type {BlobAccessConditions}\n   * @memberof PageBlobUpdateSequenceNumberOptions\n   */\n  accessConditions?: BlobAccessConditions;\n}\n\n/**\n * Options to configure Page Blob - Start Copy Incremental operation.\n *\n * @export\n * @interface PageBlobStartCopyIncrementalOptions\n */\nexport interface PageBlobStartCopyIncrementalOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof PageBlobStartCopyIncrementalOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when startting copy incremental operation.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof PageBlobStartCopyIncrementalOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n *\n * @export\n * @class PageBlobClient\n * @extends {BlobClient}\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {PageBlobs}\n   * @memberof PageBlobClient\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: NewPipelineOptions\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n   *                                                  or a TokenCredential from @azure/identity.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(url: string, credential: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName: string | Credential | TokenCredential | Pipeline,\n    blobNameOrOptions?: string | NewPipelineOptions,\n    options?: NewPipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      credentialOrPipelineOrContainerName instanceof Credential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      options = blobNameOrOptions as NewPipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      if (isNode) {\n        const containerName = credentialOrPipelineOrContainerName;\n        const blobName = blobNameOrOptions;\n\n        const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n        const sharedKeyCredential = new SharedKeyCredential(\n          extractedCreds.accountName,\n          extractedCreds.accountKey\n        );\n        urlOrConnectionString = extractedCreds.url + \"/\" + containerName + \"/\" + blobName;\n        pipeline = newPipeline(sharedKeyCredential, options);\n      } else {\n        throw new Error(\"Connection string is only supported in Node.js environment\");\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(urlOrConnectionString, pipeline);\n    this.pageBlobContext = new PageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {PageBlobClient} A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof PageBlobClient\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {number} size size of the page blob.\n   * @param {PageBlobCreateOptions} [options] Options to the Page Blob Create operation.\n   * @returns {Promise<Models.PageBlobCreateResponse>} Response data for the Page Blob Create operation.\n   * @memberof PageBlobClient\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {}\n  ): Promise<Models.PageBlobCreateResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.create(0, size, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      blobSequenceNumber: options.blobSequenceNumber,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {HttpRequestBody} body Data to upload\n   * @param {number} offset Offset of destination page blob\n   * @param {number} count Content length of body, also how many bytes to be uploaded\n   * @param {PageBlobUploadPagesOptions} [options] Options to the Page Blob Upload Pages operation.\n   * @returns {Promise<Models.PageBlobsUploadPagesResponse>} Response data for the Page Blob Upload Pages operation.\n   * @memberof PageBlobClient\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {}\n  ): Promise<Models.PageBlobUploadPagesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.uploadPages(body, count, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress,\n      range: rangeToString({ offset, count }),\n      sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {number} [offset] Starting byte position of the pages to clear.\n   * @param {number} [count] Number of bytes to clear.\n   * @param {PageBlobClearPagesOptions} [options] Options to the Page Blob Clear Pages operation.\n   * @returns {Promise<Models.PageBlobClearPagesResponse>} Response data for the Page Blob Clear Pages operation.\n   * @memberof PageBlobClient\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {}\n  ): Promise<Models.PageBlobClearPagesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.clearPages(0, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      range: rangeToString({ offset, count }),\n      sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions\n    });\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {number} [offset] Starting byte position of the page ranges.\n   * @param {number} [count] Number of bytes to get.\n   * @param {PageBlobGetPageRangesOptions} [options] Options to the Page Blob Get Ranges operation.\n   * @returns {Promise<Models.PageBlobGetPageRangesResponse>} Response data for the Page Blob Get Ranges operation.\n   * @memberof PageBlobClient\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {}\n  ): Promise<Models.PageBlobGetPageRangesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.getPageRanges({\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      range: rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {number} offset Starting byte position of the page blob\n   * @param {number} count Number of bytes to get ranges diff.\n   * @param {string} prevSnapshot Timestamp of snapshot to retrive the difference.\n   * @param {PageBlobGetPageRangesDiffOptions} [options] Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns {Promise<Models.PageBlobGetPageRangesDiffResponse>} Response data for the Page Blob Get Page Range Diff operation.\n   * @memberof PageBlobClient\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {}\n  ): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.getPageRangesDiff({\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      prevsnapshot: prevSnapshot,\n      range: rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param {number} size Target size\n   * @param {PageBlobResizeOptions} [options] Options to the Page Blob Resize operation.\n   * @returns {Promise<Models.PageBlobResizeResponse>} Response data for the Page Blob Resize operation.\n   * @memberof PageBlobClient\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {}\n  ): Promise<Models.PageBlobResizeResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.resize(size, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {Models.SequenceNumberActionType} sequenceNumberAction Indicates how the service should modify the blob's sequence number.\n   * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n   * @param {PageBlobUpdateSequenceNumberOptions} [options] Options to the Page Blob Update Sequence Number operation.\n   * @returns {Promise<Models.PageBlobUpdateSequenceNumberResponse>} Response data for the Page Blob Update Sequence Number operation.\n   * @memberof PageBlobClient\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: Models.SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {}\n  ): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n      abortSignal: aborter,\n      blobSequenceNumber: sequenceNumber,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {PageBlobStartCopyIncrementalOptions} [options] Options to the Page Blob Copy Incremental operation.\n   * @returns {Promise<Models.PageBlobCopyIncrementalResponse>} Response data for the Page Blob Copy Incremental operation.\n   * @memberof PageBlobClient\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {}\n  ): Promise<Models.PageBlobCopyIncrementalResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.pageBlobContext.copyIncremental(copySource, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n}\n","// work around circular dependency issue.\n\nexport * from \"./StorageClient\";\nexport * from \"./BlobClient\";\nexport * from \"./AppendBlobClient\";\nexport * from \"./BlockBlobClient\";\nexport * from \"./PageBlobClient\";\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  HttpRequestBody,\n  HttpResponse,\n  TokenCredential,\n  isTokenCredential,\n  isNode\n} from \"@azure/core-http\";\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { Container } from \"./generated/lib/operations\";\nimport { ContainerAccessConditions, Metadata } from \"./models\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport { ETagNone } from \"./utils/constants\";\nimport {\n  appendToURLPath,\n  truncatedISO8061Date,\n  extractConnectionStringParts\n} from \"./utils/utils.common\";\nimport {\n  AppendBlobClient,\n  BlobClient,\n  BlockBlobClient,\n  PageBlobClient,\n  StorageClient,\n  BlockBlobUploadOptions,\n  BlobDeleteOptions\n} from \"./internal\";\nimport { Credential } from \"./credentials/Credential\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { LeaseClient } from \"./LeaseClient\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\n\n/**\n * Options to configure Container - Create operation.\n *\n * @export\n * @interface ContainerCreateOptions\n */\nexport interface ContainerCreateOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerCreateOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   *\n   * @type {Metadata}\n   * @memberof ContainerCreateOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   *\n   * @type {Models.PublicAccessType}\n   * @memberof ContainerCreateOptions\n   */\n  access?: Models.PublicAccessType;\n}\n\n/**\n * Options to configure Container - Get Properties operation.\n *\n * @export\n * @interface ContainerGetPropertiesOptions\n */\nexport interface ContainerGetPropertiesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerGetPropertiesOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof ContainerGetPropertiesOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * Options to configure Container - Delete operation.\n *\n * @export\n * @interface ContainerDeleteMethodOptions\n */\nexport interface ContainerDeleteMethodOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerDeleteMethodOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when deleting the container.\n   *\n   * @type {ContainerAccessConditions}\n   * @memberof ContainerDeleteMethodOptions\n   */\n  containerAccessConditions?: ContainerAccessConditions;\n}\n\n/**\n * Options to configure Container - Set Metadata operation.\n *\n * @export\n * @interface ContainerSetMetadataOptions\n */\nexport interface ContainerSetMetadataOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerSetMetadataOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {ContainerAccessConditions}\n   * @memberof ContainerSetMetadataOptions\n   */\n  containerAccessConditions?: ContainerAccessConditions;\n}\n\n/**\n * Options to configure Container - Get Access Policy operation.\n *\n * @export\n * @interface ContainerGetAccessPolicyOptions\n */\nexport interface ContainerGetAccessPolicyOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerGetAccessPolicyOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {Models.LeaseAccessConditions}\n   * @memberof ContainerGetAccessPolicyOptions\n   */\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n *\n * @export\n * @interface SignedIdentifier\n */\nexport interface SignedIdentifier {\n  /**\n   * @member {string} id a unique id\n   */\n  id: string;\n  /**\n   * @member {AccessPolicy} accessPolicy\n   */\n  accessPolicy: {\n    /**\n     * @member {Date} start the date-time the policy is active. A validate ISO string format, or Date\n     */\n    start: Date;\n    /**\n     * @member {string} expiry the date-time the policy expires. A validate ISO string format, or Date\n     */\n    expiry: Date;\n    /**\n     * @member {string} permission the permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permission: string;\n  };\n}\n\nexport declare type ContainerGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & Models.ContainerGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: Models.ContainerGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Models.SignedIdentifier[];\n    };\n  };\n\n/**\n * Options to configure Container - Set Access Policy operation.\n *\n * @export\n * @interface ContainerSetAccessPolicyOptions\n */\nexport interface ContainerSetAccessPolicyOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerSetAccessPolicyOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when setting the access policy.\n   *\n   * @type {ContainerAccessConditions}\n   * @memberof ContainerSetAccessPolicyOptions\n   */\n  containerAccessConditions?: ContainerAccessConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n *\n * @export\n * @interface ContainerAcquireLeaseOptions\n */\nexport interface ContainerAcquireLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerAcquireLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when acquiring the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof ContainerAcquireLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n *\n * @export\n * @interface ContainerReleaseLeaseOptions\n */\nexport interface ContainerReleaseLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerReleaseLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when releasing the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof ContainerReleaseLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n *\n * @export\n * @interface ContainerRenewLeaseOptions\n */\nexport interface ContainerRenewLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerRenewLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when renewing the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof ContainerRenewLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n *\n * @export\n * @interface ContainerBreakLeaseOptions\n */\nexport interface ContainerBreakLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerBreakLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when breaking the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof ContainerBreakLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n *\n * @export\n * @interface ContainerChangeLeaseOptions\n */\nexport interface ContainerChangeLeaseOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerChangeLeaseOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * Conditions to meet when changing the lease.\n   *\n   * @type {Models.ModifiedAccessConditions}\n   * @memberof ContainerChangeLeaseOptions\n   */\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - List Blobs Segment operation.\n *\n * @interface ContainerListBlobsSegmentOptions\n */\ninterface ContainerListBlobsSegmentOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerListBlobsSegmentOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {number} [maxresults] Specifies the maximum number of containers\n   * to return. If the request does not specify maxresults, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxresults, or than the default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * @member {ListBlobsIncludeItem[]} [include] Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: Models.ListBlobsIncludeItem[];\n}\n\n/**\n * Options to configure Container - List Blobs operation.\n *\n * @export\n * @interface ContainerListBlobsOptions\n */\nexport interface ContainerListBlobsOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ContainerListBlobsOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {ListBlobsIncludeItem[]} [include] Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: Models.ListBlobsIncludeItem[];\n}\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n *\n * @export\n * @class ContainerClient\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   *\n   * @private\n   * @type {Containers}\n   * @memberof ContainerClient\n   */\n  private containerContext: Container;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {string} containerName Container name.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(connectionString: string, containerName: string, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n   *                                                  or a TokenCredential from @azure/identity. If not specified,\n   *                                                  AnonymousCredential is used.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(url: string, credential?: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?: string | Credential | TokenCredential | Pipeline,\n    options?: NewPipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      credentialOrPipelineOrContainerName instanceof Credential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      if (isNode) {\n        const containerName = credentialOrPipelineOrContainerName;\n\n        const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n        const sharedKeyCredential = new SharedKeyCredential(\n          extractedCreds.accountName,\n          extractedCreds.accountKey\n        );\n        urlOrConnectionString = extractedCreds.url + \"/\" + containerName + \"/\";\n        pipeline = newPipeline(sharedKeyCredential, options);\n      } else {\n        throw new Error(\"Connection string is only supported in Node.js environment\");\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(urlOrConnectionString, pipeline);\n    this.containerContext = new Container(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param {ContainerCreateOptions} [options] Options to Container Create operation.\n   * @returns {Promise<Models.ContainerCreateResponse>}\n   * @memberof ContainerClient\n   */\n  public async create(\n    options: ContainerCreateOptions = {}\n  ): Promise<Models.ContainerCreateResponse> {\n    if (!options.abortSignal) {\n      options.abortSignal = Aborter.none;\n    }\n    // Spread operator in destructuring assignments,\n    // this will filter out unwanted properties from the response object into result object\n    return this.containerContext.create({\n      ...options\n    });\n  }\n\n  /**\n   * Creates a BlobClient object.\n   *\n   * @param {string} blobName A blob name\n   * @returns {BlobClient} A new BlobClient object for the given blob name.\n   * @memberof BlobClient\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   * @param {string} blobName An append blob name\n   * @returns {AppendBlobClient}\n   * @memberof ContainerClient\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   * @param {string} blobName A block blob name\n   * @returns {BlockBlobClient}\n   * @memberof ContainerClient\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   * @param {string} blobName A page blob name\n   * @returns {PageBlobClient}\n   * @memberof ContainerClient\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * @param {ContainersGetPropertiesOptions} [options] Options to Container Get Properties operation.\n   * @returns {Promise<Models.ContainerGetPropertiesResponse>}\n   * @memberof ContainerClient\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {}\n  ): Promise<Models.ContainerGetPropertiesResponse> {\n    if (!options.leaseAccessConditions) {\n      options.leaseAccessConditions = {};\n    }\n\n    const aborter = options.abortSignal || Aborter.none;\n\n    return this.containerContext.getProperties({\n      abortSignal: aborter,\n      ...options.leaseAccessConditions\n    });\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param {ContainerDeleteMethodOptions} [options] Options to Container Delete operation.\n   * @returns {Promise<Models.ContainerDeleteResponse>}\n   * @memberof ContainerClient\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<Models.ContainerDeleteResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n\n    if (!options.containerAccessConditions) {\n      options.containerAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.modifiedAccessConditions) {\n      options.containerAccessConditions.modifiedAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.leaseAccessConditions) {\n      options.containerAccessConditions.leaseAccessConditions = {};\n    }\n\n    if (\n      (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfMatch and IfNoneMatch access conditions must have their default\\\n        values because they are ignored by the service\"\n      );\n    }\n\n    return this.containerContext.deleteMethod({\n      abortSignal: aborter,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param {Metadata} [metadata] Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param {ContainerSetMetadataOptions} [options] Options to Container Set Metadata operation.\n   * @returns {Promise<Models.ContainerSetMetadataResponse>}\n   * @memberof ContainerClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {}\n  ): Promise<Models.ContainerSetMetadataResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n\n    if (!options.containerAccessConditions) {\n      options.containerAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.modifiedAccessConditions) {\n      options.containerAccessConditions.modifiedAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.leaseAccessConditions) {\n      options.containerAccessConditions.leaseAccessConditions = {};\n    }\n\n    if (\n      options.containerAccessConditions.modifiedAccessConditions.ifUnmodifiedSince ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\n        because they are ignored by the blob service\"\n      );\n    }\n\n    return this.containerContext.setMetadata({\n      abortSignal: aborter,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      metadata,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param {ContainerGetAccessPolicyOptions} [options] Options to Container Get Access Policy operation.\n   * @returns {Promise<ContainerGetAccessPolicyResponse>}\n   * @memberof ContainerClient\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {}\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.leaseAccessConditions) {\n      options.leaseAccessConditions = {};\n    }\n    const aborter = options.abortSignal || Aborter.none;\n\n    const response = await this.containerContext.getAccessPolicy({\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n\n    const res: ContainerGetAccessPolicyResponse = {\n      _response: response._response,\n      blobPublicAccess: response.blobPublicAccess,\n      date: response.date,\n      eTag: response.eTag,\n      errorCode: response.errorCode,\n      lastModified: response.lastModified,\n      requestId: response.requestId,\n      signedIdentifiers: [],\n      version: response.version\n    };\n\n    for (const identifier of response) {\n      res.signedIdentifiers.push({\n        accessPolicy: {\n          expiry: new Date(identifier.accessPolicy.expiry),\n          permission: identifier.accessPolicy.permission,\n          start: new Date(identifier.accessPolicy.start)\n        },\n        id: identifier.id\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param {Models.PublicAccessType} [access] The level of public access to data in the container.\n   * @param {SignedIdentifier[]} [containerAcl] Array of elements each having a unique Id and details of the access policy.\n   * @param {ContainerSetAccessPolicyOptions} [options] Options to Container Set Access Policy operation.\n   * @returns {Promise<Models.ContainerSetAccessPolicyResponse>}\n   * @memberof ContainerClient\n   */\n  public async setAccessPolicy(\n    access?: Models.PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {}\n  ): Promise<Models.ContainerSetAccessPolicyResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    options.containerAccessConditions = options.containerAccessConditions || {};\n    const acl: Models.SignedIdentifier[] = [];\n    for (const identifier of containerAcl || []) {\n      acl.push({\n        accessPolicy: {\n          expiry: truncatedISO8061Date(identifier.accessPolicy.expiry),\n          permission: identifier.accessPolicy.permission,\n          start: truncatedISO8061Date(identifier.accessPolicy.start)\n        },\n        id: identifier.id\n      });\n    }\n\n    return this.containerContext.setAccessPolicy({\n      abortSignal: aborter,\n      access,\n      containerAcl: acl,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Get a LeaseClient that manages leases on the container.\n   *\n   * @param {string} [proposeLeaseId] Initial proposed lease Id.\n   * @returns {LeaseClient} A new LeaseClient object for managing leases on the container.\n   * @memberof ContainerClient\n   */\n  public getLeaseClient(proposeLeaseId?: string): LeaseClient {\n    return new LeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use stageBlock and commitBlockList.\n   *\n   * This is a non-parallel uploading method, please use BlockBlobClient.uploadFile(),\n   * BlockBlobClient.uploadStream() or BlockBlobClient.uploadBrowserData() for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {string} blobName Name of the block blob to create or update.\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {BlockBlobUploadOptions} [options] Options to configure the Block Blob Upload operation.\n   * @returns {Promise<{ blockBlobClient: BlockBlobClient; response: Models.BlockBlobUploadResponse }>} Block Blob upload response data and the corresponding BlockBlobClient instance.\n   * @memberof ContainerClient\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options?: BlockBlobUploadOptions\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: Models.BlockBlobUploadResponse }> {\n    const blockBlobClient = this.getBlockBlobClient(blobName);\n    const response = await blockBlobClient.upload(body, contentLength, options);\n    return {\n      blockBlobClient,\n      response\n    };\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param {string} blobName\n   * @param {BlobDeleteOptions} [options] Options to Blob Delete operation.\n   * @returns {Promise<Models.BlobDeleteResponse>} Block blob deletion response data.\n   * @memberof ContainerClient\n   */\n  public async deleteBlob(\n    blobName: string,\n    options?: BlobDeleteOptions\n  ): Promise<Models.BlobDeleteResponse> {\n    const blobClient = this.getBlobClient(blobName);\n    return await blobClient.delete(options);\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call ListBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {string} [marker] A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to Container List Blob Flat Segment operation.\n   * @returns {Promise<Models.ContainerListBlobFlatSegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.containerContext.listBlobFlatSegment({\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call ListBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {string} [marker] A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to Container List Blob Hierarchy Segment operation.\n   * @returns {Promise<Models.ContainerListBlobHierarchySegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.containerContext.listBlobHierarchySegment(delimiter, {\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the NextMarker value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The NextMarker value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<Models.ContainerListBlobFlatSegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<Models.ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    do {\n      listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n      marker = listBlobsFlatSegmentResponse.nextMarker;\n      yield await listBlobsFlatSegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Blob Items\n   *\n   * @private\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<Models.BlobItem>}\n   * @memberof ContainerClient\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<Models.BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * @example\n   *   let i = 1;\n   *   for await (const blob of containerClient.listBlobsFlat()) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   *\n   * @example\n   *   // Generator syntax .next()\n   *   let i = 1;\n   *   iter = containerClient.listBlobsFlat();\n   *   let blobItem = await iter.next();\n   *   while (!blobItem.done) {\n   *     console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *     blobItem = await iter.next();\n   *   }\n   *\n   * @example\n   *   // Example for .byPage()\n   *   // passing optional maxPageSize in the page settings\n   *   let i = 1;\n   *   for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *     for (const blob of response.segment.blobItems) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   *\n   * @example\n   *   // Passing marker as an argument (similar to the previous example)\n   *   let i = 1;\n   *   let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   *   let response = (await iterator.next()).value;\n   *   // Prints 2 blob names\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *    }\n   *   // Gets next marker\n   *   let marker = response.nextMarker;\n   *    // Passing next marker as continuationToken\n   *   iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   *   response = (await iterator.next()).value;\n   *   // Prints 10 blob names\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   *\n   * @param {ContainerListBlobsOptions} [options={}] Options to list blobs.\n   * @returns {PagedAsyncIterableIterator<Models.BlobItem, Models.ContainerListBlobFlatSegmentResponse>} An asyncIterableIterator that supports paging.\n   * @memberof ContainerClient\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<Models.BlobItem, Models.ContainerListBlobFlatSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxresults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the NextMarker value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The NextMarker value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<Models.ContainerListBlobHierarchySegmentResponse>}\n   * @memberof ContainerClient\n   */ private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<Models.ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    do {\n      listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n        delimiter,\n        marker,\n        options\n      );\n      marker = listBlobsHierarchySegmentResponse.nextMarker;\n      yield await listBlobsHierarchySegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for BlobPrefixes and BlobItems\n   *\n   * @private\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<{ kind: \"prefix\" } & Models.BlobPrefix | { kind: \"blob\" } & Models.BlobItem>}\n   * @memberof ContainerClient\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<\n    { kind: \"prefix\" } & Models.BlobPrefix | { kind: \"blob\" } & Models.BlobItem\n  > {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield { kind: \"prefix\", ...prefix };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * @example\n   *   for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *     if (item.kind === \"prefix\") {\n   *       console.log(`\\tBlobPrefix: ${item.name}`);\n   *     } else {\n   *       console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n   *     }\n   *   }\n   *\n   * @example\n   * // Generator syntax .next() and passing a prefix\n   * let iter = await containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   *\n   * @example\n   *   // byPage()\n   *   console.log(\"Listing blobs by hierarchy by page\");\n   *   for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *     const segment = response.segment;\n   *     if (segment.blobPrefixes) {\n   *       for (const prefix of segment.blobPrefixes) {\n   *         console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *       }\n   *     }\n   *     for (const blob of response.segment.blobItems) {\n   *       console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n   *     }\n   *   }\n   *\n   * @example\n   *   // 4. byPage() and passing a prefix and max page size\n   *   console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *   let i = 1;\n   *   for await (const response of containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\"}).byPage({ maxPageSize: 2 })) {\n   *     console.log(`Page ${i++}`);\n   *     const segment = response.segment;\n   *     if (segment.blobPrefixes) {\n   *       for (const prefix of segment.blobPrefixes) {\n   *         console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *       }\n   *     }\n   *     for (const blob of response.segment.blobItems) {\n   *       console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n   *     }\n   *   }\n   *\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {ContainerListBlobsOptions} [options={}] Options to list blobs operation.\n   * @returns {(PagedAsyncIterableIterator<\n   *   { kind: \"prefix\" } & Models.BlobPrefix | { kind: \"blob\" } & Models.BlobItem,\n   *     Models.ContainerListBlobHierarchySegmentResponse\n   *   >)}\n   * @memberof ContainerClient\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<\n    { kind: \"prefix\" } & Models.BlobPrefix | { kind: \"blob\" } & Models.BlobItem,\n    Models.ContainerListBlobHierarchySegmentResponse\n  > {\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxresults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TokenCredential, isTokenCredential } from \"@azure/core-http\";\nimport * as Models from \"./generated/lib/models\";\nimport { Aborter } from \"./Aborter\";\nimport { ListContainersIncludeType } from \"./generated/lib/models/index\";\nimport { Service } from \"./generated/lib/operations\";\nimport { newPipeline, NewPipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  ContainerClient,\n  ContainerCreateOptions,\n  ContainerDeleteMethodOptions\n} from \"./ContainerClient\";\nimport { appendToURLPath, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageClient } from \"./internal\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\n\n/**\n * Options to configure the Service - Get Properties operation.\n *\n * @export\n * @interface ServiceGetPropertiesOptions\n */\nexport interface ServiceGetPropertiesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceGetPropertiesOptions\n   */\n  abortSignal?: Aborter;\n}\n\n/**\n * Options to configure the Service - Set Properties operation.\n *\n * @export\n * @interface ServiceSetPropertiesOptions\n */\nexport interface ServiceSetPropertiesOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceSetPropertiesOptions\n   */\n  abortSignal?: Aborter;\n}\n\n/**\n * Options to configure the Service - Get Account Info operation.\n *\n * @export\n * @interface ServiceGetAccountInfoOptions\n */\nexport interface ServiceGetAccountInfoOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceGetAccountInfoOptions\n   */\n  abortSignal?: Aborter;\n}\n\n/**\n * Options to configure the Service - Get Statistics operation.\n *\n * @export\n * @interface ServiceGetStatisticsOptions\n */\nexport interface ServiceGetStatisticsOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceGetStatisticsOptions\n   */\n  abortSignal?: Aborter;\n}\n\n/**\n * Options to configure the Service - List Container Segment operation.\n *\n * @interface ServiceListContainersSegmentOptions\n */\ninterface ServiceListContainersSegmentOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceListContainersSegmentOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {number} [maxresults] Specifies the maximum number of containers\n   * to return. If the request does not specify maxresults, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxresults, or than the default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * @member {ListContainersIncludeType} [include] Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n}\n\n/**\n * Options to configure the Service - List Containers operation.\n *\n * @export\n * @interface ServiceListContainersOptions\n */\nexport interface ServiceListContainersOptions {\n  /**\n   * Aborter instance to cancel request. It can be created with Aborter.none\n   * or Aborter.timeout(). Go to documents of {@link Aborter} for more examples\n   * about request cancellation.\n   *\n   * @type {Aborter}\n   * @memberof ServiceListContainersOptions\n   */\n  abortSignal?: Aborter;\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {ListContainersIncludeType} [include] Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n}\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n *\n * @export\n * @class BlobServiceClient\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   *\n   * @private\n   * @type {Service}\n   * @memberof BlobServiceClient\n   */\n  private serviceContext: Service;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param {string} connectionString Connection string for an Azure storage account.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobServiceClient\n   */\n  public static fromConnectionString(connectionString: string, options?: NewPipelineOptions) {\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    const sharedKeyCredential = new SharedKeyCredential(\n      extractedCreds.accountName,\n      extractedCreds.accountKey\n    );\n    const pipeline = newPipeline(sharedKeyCredential, options);\n    return new BlobServiceClient(extractedCreds.url, pipeline);\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Credential | TokenCredential} credential Such as AnonymousCredential, SharedKeyCredential, RawTokenCredential,\n   *                                                  or a TokenCredential from @azure/identity. If not specified,\n   *                                                  AnonymousCredential is used.\n   * @param {NewPipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobServiceClient\n   */\n  constructor(url: string, credential?: Credential | TokenCredential, options?: NewPipelineOptions);\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobServiceClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | TokenCredential | Pipeline,\n    options?: NewPipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      credentialOrPipeline instanceof Credential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a ContainerClient object\n   *\n   * @param containerName A container name\n   * @returns {ContainerClient} A new ContainerClient object for the given container name.\n   * @memberof BlobServiceClient\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Create a Blob container.\n   *\n   * @param {string} containerName Name of the container to create.\n   * @param {ContainerCreateOptions} [options] Options to configure Container Create operation.\n   * @returns {Promise<{ containerClient: ContainerClient; containerCreateResponse: Models.ContainerCreateResponse }>} Container creation response and the corresponding container client.\n   * @memberof BlobServiceClient\n   */\n  public async createContainer(\n    containerName: string,\n    options?: ContainerCreateOptions\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: Models.ContainerCreateResponse;\n  }> {\n    const containerClient = this.getContainerClient(containerName);\n    const containerCreateResponse = await containerClient.create(options);\n    return {\n      containerClient,\n      containerCreateResponse\n    };\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param {string} containerName Name of the container to delete.\n   * @param {ContainerDeleteMethodOptions} [options] Options to configure Container Delete operation.\n   * @returns {Promise<Models.ContainerDeleteResponse>} Container deletion response.\n   * @memberof BlobServiceClient\n   */\n  public async deleteContainer(\n    containerName: string,\n    options?: ContainerDeleteMethodOptions\n  ): Promise<Models.ContainerDeleteResponse> {\n    const containerClient = this.getContainerClient(containerName);\n    return await containerClient.delete(options);\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties}\n   *\n   * @param {ServiceGetPropertiesOptions} [options] Options to the Service Get Properties operation.\n   * @returns {Promise<Models.ServiceGetPropertiesResponse>} Response data for the Service Get Properties operation.\n   * @memberof BlobServiceClient\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<Models.ServiceGetPropertiesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.serviceContext.getProperties({\n      abortSignal: aborter || Aborter.none\n    });\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n   *\n   * @param {Models.StorageServiceProperties} properties\n   * @param {ServiceSetPropertiesOptions} [options] Options to the Service Set Properties operation.\n   * @returns {Promise<Models.ServiceSetPropertiesResponse>} Response data for the Service Set Properties operation.\n   * @memberof BlobServiceClient\n   */\n  public async setProperties(\n    properties: Models.StorageServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<Models.ServiceSetPropertiesResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.serviceContext.setProperties(properties, {\n      abortSignal: aborter || Aborter.none\n    });\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n   *\n   * @param {ServiceGetStatisticsOptions} [options] Options to the Service Get Statistics operation.\n   * @returns {Promise<Models.ServiceGetStatisticsResponse>} Response data for the Service Get Statistics operation.\n   * @memberof BlobServiceClient\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {}\n  ): Promise<Models.ServiceGetStatisticsResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.serviceContext.getStatistics({\n      abortSignal: aborter || Aborter.none\n    });\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param {ServiceGetAccountInfoOptions} [options] Options to the Service Get Account Info operation.\n   * @returns {Promise<Models.ServiceGetAccountInfoResponse>} Response data for the Service Get Account Info operation.\n   * @memberof BlobServiceClient\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {}\n  ): Promise<Models.ServiceGetAccountInfoResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.serviceContext.getAccountInfo({\n      abortSignal: aborter || Aborter.none\n    });\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of containers to be returned with the next listing operation. The\n   *                          operation returns the NextMarker value within the response body if the\n   *                          listing operation did not return all containers remaining to be listed\n   *                          with the current page. The NextMarker value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ServiceListContainersSegmentOptions} [options] Options to the Service List Container Segment operation.\n   * @returns {Promise<Models.ServiceListContainersSegmentResponse>} Response data for the Service List Container Segment operation.\n   * @memberof BlobServiceClient\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): Promise<Models.ServiceListContainersSegmentResponse> {\n    const aborter = options.abortSignal || Aborter.none;\n    return this.serviceContext.listContainersSegment({\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of containers to be returned with the next listing operation. The\n   *                          operation returns the NextMarker value within the response body if the\n   *                          listing operation did not return all containers remaining to be listed\n   *                          with the current page. The NextMarker value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ServiceListContainersSegmentOptions} [options] Options to list containers operation.\n   * @returns {AsyncIterableIterator<Models.ServiceListContainersSegmentResponse>}\n   * @memberof BlobServiceClient\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<Models.ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    do {\n      listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n      marker = listContainersSegmentResponse.nextMarker;\n      yield await listContainersSegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @private\n   * @param {ServiceListContainersSegmentOptions} [options] Options to list containers operation.\n   * @returns {AsyncIterableIterator<Models.ServiceListcontainersSegmentResponse>}\n   * @memberof BlobServiceClient\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<Models.ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * @example\n   *   let i = 1;\n   *   for await (const container of blobServiceClient.listContainers()) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   *\n   * @example\n   *   // Generator syntax .next()\n   *   let i = 1;\n   *   iter = blobServiceClient.listContainers();\n   *   let containerItem = await iter.next();\n   *   while (!containerItem.done) {\n   *     console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *     containerItem = await iter.next();\n   *   }\n   *\n   * @example\n   *   // Example for .byPage()\n   *   // passing optional maxPageSize in the page settings\n   *   let i = 1;\n   *   for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *     if (response.containerItems) {\n   *       for (const container of response.containerItems) {\n   *         console.log(`Container ${i++}: ${container.name}`);\n   *       }\n   *     }\n   *   }\n   *\n   * @example\n   *   // Passing marker as an argument (similar to the previous example)\n   *   let i = 1;\n   *   let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   *   let response = (await iterator.next()).value;\n   *   // Prints 2 container names\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   *   // Gets next marker\n   *   let marker = response.nextMarker;\n   *   // Passing next marker as continuationToken\n   *   iterator = blobServiceClient\n   *     .listContainers()\n   *     .byPage({ continuationToken: marker, maxPageSize: 10 });\n   *   response = (await iterator.next()).value;\n   *   // Prints 10 container names\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *        console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   *\n   *\n   * @param {ServiceListContainersOptions} [options={}] Options to list containers.\n   * @returns {PagedAsyncIterableIterator<Models.ContainerItem, Models.ServiceListContainersSegmentResponse>} An asyncIterableIterator that supports paging.\n   * @memberof BlobServiceClient\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {}\n  ): PagedAsyncIterableIterator<Models.ContainerItem, Models.ServiceListContainersSegmentResponse> {\n    // AsyncIterableIterator to iterate over containers\n    const iter = this.listItems(options);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxresults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {AccountSASPermissions}\n   * @memberof AccountSASPermissions\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASPermissions\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @static\n   * @param {string} resourceTypes\n   * @returns {AccountSASResourceTypes}\n   * @memberof AccountSASResourceTypes\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASResourceTypes\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @static\n   * @param {string} services\n   * @returns {AccountSASServices}\n   * @memberof AccountSASServices\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   * @returns {string}\n   * @memberof AccountSASServices\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n *\n * @export\n * @interface IPRange\n */\nexport interface IPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof IPRange\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof IPRange\n   */\n  end?: string;\n}\n\n/**\n * Generate IPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {IPRange} ipRange\n * @returns {string}\n */\nexport function ipRangeToString(ipRange: IPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { IPRange, ipRangeToString } from \"./IPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  HTTPS = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HTTPSandHTTP = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startTime?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiryTime?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage container or blob (only for {@link BlobSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {IPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: IPRange;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(IPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): IPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startTime] Representing the start time for this SAS token\n   * @param {Date} [expiryTime] Representing the expiry time for this SAS token\n   * @param {IPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startTime?: Date,\n    expiryTime?: Date,\n    ipRange?: IPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiryTime = expiryTime;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startTime = startTime;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startTime ? truncatedISO8061Date(this.startTime, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiryTime ? truncatedISO8061Date(this.expiryTime, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { IPRange, ipRangeToString } from \"./IPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call generateSASQueryParameters() to obtain a representation of the SAS\n * which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters} exist because\n * the former is mutable and a logical representation while the latter is immutable and used to generate actual REST\n * requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n *\n * @export\n * @class AccountSASSignatureValues\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   *\n   * @type {SASProtocol}\n   * @memberof AccountSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  startTime?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  expiryTime: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  permissions: string;\n\n  /**\n   * Optional. IP range allowed.\n   *\n   * @type {IPRange}\n   * @memberof AccountSASSignatureValues\n   */\n  ipRange?: IPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof AccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions\n  ).toString();\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startTime\n      ? truncatedISO8061Date(accountSASSignatureValues.startTime, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiryTime, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startTime,\n    accountSASSignatureValues.expiryTime,\n    accountSASSignatureValues.ipRange\n  );\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class BlobSASPermissions\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {BlobSASPermissions}\n   * @memberof BlobSASPermissions\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns {string} A string which represents the BlobSASPermissions\n   * @memberof BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class ContainerSASPermissions\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns\n   * @memberof ContainerSASPermissions\n   */\n  public static parse(permissions: string) {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @returns {string}\n   * @memberof ContainerSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { IPRange, ipRangeToString } from \"./IPRange\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n *\n * @export\n * @class BlobSASSignatureValues\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   *\n   * @type {SASProtocol}\n   * @memberof BlobSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof BlobSASSignatureValues\n   */\n  startTime?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof BlobSASSignatureValues\n   */\n  expiryTime?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  permissions?: string;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   *\n   * @type {IPRange}\n   * @memberof BlobSASSignatureValues\n   */\n  ipRange?: IPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  containerName: string;\n\n  /**\n   * Optional. The name of the container the SAS user may access.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  blobName?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiryTime are required.\n * You MUST assign value to identifier or expiryTime & permissions manually if you initial with\n * this constructor.\n *\n * @export\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters {\n  if (\n    !blobSASSignatureValues.identifier &&\n    (!blobSASSignatureValues.permissions && !blobSASSignatureValues.expiryTime)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiryTime' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n      resource = \"b\";\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startTime\n      ? truncatedISO8061Date(blobSASSignatureValues.startTime, false)\n      : \"\",\n    blobSASSignatureValues.expiryTime\n      ? truncatedISO8061Date(blobSASSignatureValues.expiryTime, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startTime,\n    blobSASSignatureValues.expiryTime,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\n\n/**\n * RawTokenCredential is a TokenCredential that always returns the given token.\n * Renew the token by setting a new token string value to token property.\n *\n * @example\n *  const rawTokenCredential = new RawTokenCredential(\"token\");\n *  const pipeline = newPipeline(tokenCredential);\n *\n *  const queueServiceClient = new QueueServiceClient(\"https://mystorageaccount.queue.core.windows.net\", pipeline);\n *\n *  // Set up a timer to refresh the token\n *  const timerID = setInterval(() => {\n *    // Update token by accessing to public tokenCredential.token\n *    tokenCredential.token = \"updatedToken\";\n *    // WARNING: Timer must be manually stopped! It will forbid GC of tokenCredential\n *    if (shouldStop()) {\n *      clearInterval(timerID);\n *    }\n *  }, 60 * 60 * 1000); // Set an interval time before your token expired\n * @export\n * @implements {TokenCredential}\n *\n */\nexport class RawTokenCredential implements TokenCredential {\n  /**\n   * Mutable token value. You can set a renewed token value to this property,\n   * for example, when an OAuth token is expired.\n   *\n   * @type {string}\n   */\n  public token: string;\n\n  /**\n   * Creates an instance of TokenCredential.\n   * @param {string} token\n   */\n  constructor(token: string) {\n    this.token = token;\n  }\n\n  /**\n   * Retrieves the token stored in this RawTokenCredential.\n   * \n   * @param _scopes Ignored since token is already known.\n   * @param _options Ignored since token is already known.\n   * @returns {AccessToken} The access token details.\n   */\n  async getToken(_scopes: string | string[], _options?: GetTokenOptions): Promise<AccessToken | null> {\n    return {\n      token: this.token,\n      expiresOnTimestamp: Date.now() + 2 * 60 * 1000 // 2 Minutes\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RestError } from \"@azure/core-http\";\n\nimport * as Models from \"../src/generated/lib/models\";\n\nexport * from \"./BlobServiceClient\";\nexport * from \"./ContainerClient\";\n// ordering of these clients is important as there are circular dependencies\nexport * from \"./BlobClient\";\nexport * from \"./AppendBlobClient\";\nexport * from \"./BlockBlobClient\";\nexport * from \"./PageBlobClient\";\n\nexport * from \"./Aborter\";\nexport * from \"./AccountSASPermissions\";\nexport * from \"./AccountSASResourceTypes\";\nexport * from \"./AccountSASServices\";\nexport * from \"./AccountSASSignatureValues\";\nexport * from \"./BlobSASPermissions\";\nexport * from \"./BlobSASSignatureValues\";\nexport * from \"./BrowserPolicyFactory\";\nexport * from \"./ContainerSASPermissions\";\nexport * from \"./credentials/AnonymousCredential\";\nexport * from \"./credentials/Credential\";\nexport * from \"./credentials/SharedKeyCredential\";\nexport * from \"./credentials/RawTokenCredential\";\nexport { IPRange } from \"./IPRange\";\nexport { Range } from \"./Range\";\nexport * from \"./LeaseClient\";\nexport * from \"./Pipeline\";\nexport * from \"./policies/AnonymousCredentialPolicy\";\nexport * from \"./policies/CredentialPolicy\";\nexport * from \"./RetryPolicyFactory\";\nexport * from \"./LoggingPolicyFactory\";\nexport * from \"./policies/SharedKeyCredentialPolicy\";\nexport * from \"./TelemetryPolicyFactory\";\nexport * from \"./UniqueRequestIDPolicyFactory\";\nexport * from \"./SASQueryParameters\";\nexport { Models, RestError };\n"],"names":["isNode","coreHttp.QueryCollectionFormat","coreHttp.Serializer","Parameters.url","Parameters.timeout","Parameters.restype0","Parameters.comp0","Parameters.version","Parameters.requestId","Mappers.StorageServiceProperties","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","Mappers.ServiceGetPropertiesHeaders","Parameters.comp1","Mappers.StorageServiceStats","Mappers.ServiceGetStatisticsHeaders","Parameters.prefix","Parameters.marker","Parameters.maxresults","Parameters.include0","Parameters.comp2","Mappers.ListContainersSegmentResponse","Mappers.ServiceListContainersSegmentHeaders","Parameters.restype1","Mappers.ServiceGetAccountInfoHeaders","Parameters.nextPageLink","getPropertiesOperationSpec","getAccountInfoOperationSpec","serializer","Mappers","Parameters.restype2","Parameters.metadata","Parameters.access","Mappers.ContainerCreateHeaders","Parameters.leaseId0","Mappers.ContainerGetPropertiesHeaders","Parameters.ifModifiedSince","Parameters.ifUnmodifiedSince","Mappers.ContainerDeleteHeaders","Parameters.comp3","Mappers.ContainerSetMetadataHeaders","Parameters.comp4","Mappers.ContainerGetAccessPolicyHeaders","Mappers.ContainerSetAccessPolicyHeaders","Parameters.comp5","Parameters.duration","Parameters.proposedLeaseId0","Parameters.action0","Mappers.ContainerAcquireLeaseHeaders","Parameters.leaseId1","Parameters.action1","Mappers.ContainerReleaseLeaseHeaders","Parameters.action2","Mappers.ContainerRenewLeaseHeaders","Parameters.breakPeriod","Parameters.action3","Mappers.ContainerBreakLeaseHeaders","Parameters.proposedLeaseId1","Parameters.action4","Mappers.ContainerChangeLeaseHeaders","Parameters.include1","Mappers.ListBlobsFlatSegmentResponse","Mappers.ContainerListBlobFlatSegmentHeaders","Parameters.delimiter","Mappers.ListBlobsHierarchySegmentResponse","Mappers.ContainerListBlobHierarchySegmentHeaders","Mappers.ContainerGetAccountInfoHeaders","deleteMethodOperationSpec","setMetadataOperationSpec","acquireLeaseOperationSpec","releaseLeaseOperationSpec","renewLeaseOperationSpec","changeLeaseOperationSpec","breakLeaseOperationSpec","Parameters.snapshot","Parameters.range","Parameters.rangeGetContentMD5","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.BlobDownloadHeaders","Mappers.BlobGetPropertiesHeaders","Parameters.deleteSnapshots","Mappers.BlobDeleteHeaders","Parameters.comp6","Mappers.BlobUndeleteHeaders","Parameters.blobCacheControl","Parameters.blobContentType","Parameters.blobContentMD5","Parameters.blobContentEncoding","Parameters.blobContentLanguage","Parameters.blobContentDisposition","Mappers.BlobSetHTTPHeadersHeaders","Mappers.BlobSetMetadataHeaders","Mappers.BlobAcquireLeaseHeaders","Mappers.BlobReleaseLeaseHeaders","Mappers.BlobRenewLeaseHeaders","Mappers.BlobChangeLeaseHeaders","Mappers.BlobBreakLeaseHeaders","Parameters.comp7","Mappers.BlobCreateSnapshotHeaders","Parameters.copySource","Parameters.sourceIfModifiedSince","Parameters.sourceIfUnmodifiedSince","Parameters.sourceIfMatch","Parameters.sourceIfNoneMatch","Mappers.BlobStartCopyFromURLHeaders","Parameters.copyId","Parameters.comp8","Parameters.copyActionAbortConstant","Mappers.BlobAbortCopyFromURLHeaders","Parameters.comp9","Parameters.tier","Mappers.BlobSetTierHeaders","Mappers.BlobGetAccountInfoHeaders","createOperationSpec","Parameters.contentLength","Parameters.blobContentLength","Parameters.blobSequenceNumber","Parameters.blobType0","Mappers.PageBlobCreateHeaders","Parameters.comp10","Parameters.transactionalContentMD5","Parameters.pageWrite0","Parameters.ifSequenceNumberLessThanOrEqualTo","Parameters.ifSequenceNumberLessThan","Parameters.ifSequenceNumberEqualTo","Mappers.PageBlobUploadPagesHeaders","Parameters.pageWrite1","Mappers.PageBlobClearPagesHeaders","Parameters.comp11","Mappers.PageList","Mappers.PageBlobGetPageRangesHeaders","Parameters.prevsnapshot","Mappers.PageBlobGetPageRangesDiffHeaders","Mappers.PageBlobResizeHeaders","Parameters.sequenceNumberAction","Mappers.PageBlobUpdateSequenceNumberHeaders","Parameters.comp12","Mappers.PageBlobCopyIncrementalHeaders","Parameters.blobType1","Mappers.AppendBlobCreateHeaders","Parameters.comp13","Parameters.maxSize","Parameters.appendPosition","Mappers.AppendBlobAppendBlockHeaders","Parameters.blobType2","Mappers.BlockBlobUploadHeaders","Parameters.blockId","Parameters.comp14","Mappers.BlockBlobStageBlockHeaders","Parameters.sourceUrl","Parameters.sourceRange","Parameters.sourceContentMD5","Mappers.BlockBlobStageBlockFromURLHeaders","Parameters.comp15","Mappers.BlockLookupList","Mappers.BlockBlobCommitBlockListHeaders","Parameters.listType","Mappers.BlockList","Mappers.BlockBlobGetBlockListHeaders","URLBuilder","HttpHeaders","fs.createWriteStream","tslib_1.__extends","BaseRequestPolicy","HttpPipelineLogLevel","RestError","delay","os.type","os.release","generateUuid","deserializationPolicy","proxyPolicy","getDefaultProxySettings","isTokenCredential","bearerTokenAuthenticationPolicy","coreHttp.getDefaultUserAgentValue","coreHttp.ServiceClient","Readable","Crypto.createHmac","EventEmitter","Blob","fs.statSync","fs.createReadStream","tslib_1.__asyncValues","tslib_1.__values","tslib_1.__asyncDelegator","SASProtocol"],"mappings":"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"}